ARM GAS  /tmp/cce2Xn9k.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.UserPixelSetFunction,"ax",%progbits
  20              		.align	1
  21              		.global	UserPixelSetFunction
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	UserPixelSetFunction:
  27              	.LVL0:
  28              	.LFB1442:
  29              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.</center></h2>
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/main.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/main.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/main.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/main.c ****   *
  17:Core/Src/main.c ****   ******************************************************************************
  18:Core/Src/main.c ****   */
  19:Core/Src/main.c **** /* USER CODE END Header */
  20:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/main.c **** #include "main.h"
  22:Core/Src/main.c **** #include "adc.h"
  23:Core/Src/main.c **** #include "crc.h"
  24:Core/Src/main.c **** #include "dac.h"
  25:Core/Src/main.c **** #include "dma.h"
  26:Core/Src/main.c **** #include "fdcan.h"
  27:Core/Src/main.c **** #include "i2c.h"
  28:Core/Src/main.c **** #include "quadspi.h"
  29:Core/Src/main.c **** #include "spi.h"
ARM GAS  /tmp/cce2Xn9k.s 			page 2


  30:Core/Src/main.c **** #include "tim.h"
  31:Core/Src/main.c **** #include "usart.h"
  32:Core/Src/main.c **** #include "usb_device.h"
  33:Core/Src/main.c **** #include "gpio.h"
  34:Core/Src/main.c **** #include "fmc.h"
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  37:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  38:Core/Src/main.c **** #include "LED.h"
  39:Core/Src/main.c **** #include "kbd.h"
  40:Core/Src/main.c **** #include "SCI.h"
  41:Core/Src/main.c **** #include "lcd.h"
  42:Core/Src/main.c **** #include "ugui.h"
  43:Core/Src/main.c **** #include "XPT2046_touch.h"
  44:Core/Src/main.c **** #include "ColorSpaces.h"
  45:Core/Src/main.c **** #include "joystick.h"
  46:Core/Src/main.c **** #include "tetromino.h"
  47:Core/Src/main.c **** #include <stdio.h>
  48:Core/Src/main.c **** /* USER CODE END Includes */
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  51:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** /* USER CODE END PTD */
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  56:Core/Src/main.c **** /* USER CODE BEGIN PD */
  57:Core/Src/main.c **** #define LCD_width ILI9341_GetParam(LCD_WIDTH)
  58:Core/Src/main.c **** #define LCD_height ILI9341_GetParam(LCD_HEIGHT)
  59:Core/Src/main.c **** /* USER CODE END PD */
  60:Core/Src/main.c **** 
  61:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  62:Core/Src/main.c **** /* USER CODE BEGIN PM */
  63:Core/Src/main.c **** 
  64:Core/Src/main.c **** /* USER CODE END PM */
  65:Core/Src/main.c **** 
  66:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  67:Core/Src/main.c **** 
  68:Core/Src/main.c **** /* USER CODE BEGIN PV */
  69:Core/Src/main.c **** 
  70:Core/Src/main.c **** /* USER CODE END PV */
  71:Core/Src/main.c **** 
  72:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  73:Core/Src/main.c **** void SystemClock_Config(void);
  74:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  75:Core/Src/main.c **** 
  76:Core/Src/main.c **** /* USER CODE END PFP */
  77:Core/Src/main.c **** 
  78:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  79:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  80:Core/Src/main.c **** 
  81:Core/Src/main.c **** 
  82:Core/Src/main.c **** void UserPixelSetFunction(UG_S16 x, UG_S16 y, UG_COLOR c)
  83:Core/Src/main.c **** {
  30              		.loc 1 83 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 8
ARM GAS  /tmp/cce2Xn9k.s 			page 3


  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 83 1 is_stmt 0 view .LVU1
  35 0000 00B5     		push	{lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 4
  38              		.cfi_offset 14, -4
  39 0002 83B0     		sub	sp, sp, #12
  40              	.LCFI1:
  41              		.cfi_def_cfa_offset 16
  42 0004 0192     		str	r2, [sp, #4]
  84:Core/Src/main.c **** 	ILI9341_SetDisplayWindow(x, y, 1, 1);
  43              		.loc 1 84 2 is_stmt 1 view .LVU2
  44 0006 0123     		movs	r3, #1
  45 0008 1A46     		mov	r2, r3
  46              	.LVL1:
  47              		.loc 1 84 2 is_stmt 0 view .LVU3
  48 000a FFF7FEFF 		bl	ILI9341_SetDisplayWindow
  49              	.LVL2:
  85:Core/Src/main.c **** 	ILI9341_SendData((LCD_IO_Data_t *)&c, 1);
  50              		.loc 1 85 2 is_stmt 1 view .LVU4
  51 000e 0121     		movs	r1, #1
  52 0010 01A8     		add	r0, sp, #4
  53 0012 FFF7FEFF 		bl	ILI9341_SendData
  54              	.LVL3:
  86:Core/Src/main.c **** }
  55              		.loc 1 86 1 is_stmt 0 view .LVU5
  56 0016 03B0     		add	sp, sp, #12
  57              	.LCFI2:
  58              		.cfi_def_cfa_offset 4
  59              		@ sp needed
  60 0018 5DF804FB 		ldr	pc, [sp], #4
  61              		.cfi_endproc
  62              	.LFE1442:
  64              		.section	.text._HW_FillFrame_,"ax",%progbits
  65              		.align	1
  66              		.global	_HW_FillFrame_
  67              		.syntax unified
  68              		.thumb
  69              		.thumb_func
  71              	_HW_FillFrame_:
  72              	.LVL4:
  73              	.LFB1443:
  87:Core/Src/main.c **** 
  88:Core/Src/main.c **** UG_RESULT _HW_FillFrame_(UG_S16 x, UG_S16 y, UG_S16 w, UG_S16 h, UG_COLOR c)
  89:Core/Src/main.c **** {
  74              		.loc 1 89 1 is_stmt 1 view -0
  75              		.cfi_startproc
  76              		@ args = 4, pretend = 0, frame = 0
  77              		@ frame_needed = 0, uses_anonymous_args = 0
  78              		.loc 1 89 1 is_stmt 0 view .LVU7
  79 0000 10B5     		push	{r4, lr}
  80              	.LCFI3:
  81              		.cfi_def_cfa_offset 8
  82              		.cfi_offset 4, -8
  83              		.cfi_offset 14, -4
  84 0002 82B0     		sub	sp, sp, #8
  85              	.LCFI4:
ARM GAS  /tmp/cce2Xn9k.s 			page 4


  86              		.cfi_def_cfa_offset 16
  90:Core/Src/main.c **** 	LCD_FillRect(x, y, w, h, c);
  87              		.loc 1 90 2 is_stmt 1 view .LVU8
  88 0004 BDF81040 		ldrh	r4, [sp, #16]
  89 0008 0094     		str	r4, [sp]
  90 000a FFF7FEFF 		bl	LCD_FillRect
  91              	.LVL5:
  91:Core/Src/main.c **** 
  92:Core/Src/main.c **** 	return UG_RESULT_OK;
  92              		.loc 1 92 2 view .LVU9
  93:Core/Src/main.c **** }
  93              		.loc 1 93 1 is_stmt 0 view .LVU10
  94 000e 0020     		movs	r0, #0
  95 0010 02B0     		add	sp, sp, #8
  96              	.LCFI5:
  97              		.cfi_def_cfa_offset 8
  98              		@ sp needed
  99 0012 10BD     		pop	{r4, pc}
 100              		.loc 1 93 1 view .LVU11
 101              		.cfi_endproc
 102              	.LFE1443:
 104              		.section	.text.initFA,"ax",%progbits
 105              		.align	1
 106              		.global	initFA
 107              		.syntax unified
 108              		.thumb
 109              		.thumb_func
 111              	initFA:
 112              	.LFB1444:
  94:Core/Src/main.c **** 
  95:Core/Src/main.c **** 
  96:Core/Src/main.c **** 
  97:Core/Src/main.c **** // global variables & structs
  98:Core/Src/main.c **** UG_GUI gui;
  99:Core/Src/main.c **** 
 100:Core/Src/main.c **** uint16_t p_y = 240/2 - 100;
 101:Core/Src/main.c **** uint16_t p_x = 320/2 - 100;
 102:Core/Src/main.c **** 
 103:Core/Src/main.c **** int score = 0;
 104:Core/Src/main.c **** int rotations;
 105:Core/Src/main.c **** int fullRow[24] = {0};
 106:Core/Src/main.c **** int seed = 12345;
 107:Core/Src/main.c **** uint16_t fieldArray[34*25]={0};
 108:Core/Src/main.c **** coord_t joystick_raw, joystick_out;
 109:Core/Src/main.c **** joystick_t joystick;
 110:Core/Src/main.c **** 
 111:Core/Src/main.c **** typedef struct {
 112:Core/Src/main.c **** 	buttons_enum_t name;
 113:Core/Src/main.c ****     int previousState;
 114:Core/Src/main.c ****     uint32_t lastPressTime;
 115:Core/Src/main.c **** } ButtonState;
 116:Core/Src/main.c **** 
 117:Core/Src/main.c **** ButtonState up = {BTN_UP, 0, 0};
 118:Core/Src/main.c **** ButtonState right = {BTN_RIGHT, 0, 0};
 119:Core/Src/main.c **** ButtonState down = {BTN_DOWN, 0, 0};
 120:Core/Src/main.c **** ButtonState left = {BTN_LEFT, 0, 0};
 121:Core/Src/main.c **** ButtonState ok = {BTN_OK, 0, 0};
ARM GAS  /tmp/cce2Xn9k.s 			page 5


 122:Core/Src/main.c **** ButtonState esc = {BTN_ESC, 0, 0};
 123:Core/Src/main.c **** 
 124:Core/Src/main.c **** typedef enum {
 125:Core/Src/main.c ****     JOY_LEFT,
 126:Core/Src/main.c **** 	JOY_RIGHT
 127:Core/Src/main.c **** } direction;
 128:Core/Src/main.c **** 
 129:Core/Src/main.c **** typedef struct {
 130:Core/Src/main.c **** 	direction dir;
 131:Core/Src/main.c ****     int previousState;
 132:Core/Src/main.c ****     uint32_t lastPressTime;
 133:Core/Src/main.c **** } joystickState;
 134:Core/Src/main.c **** 
 135:Core/Src/main.c **** typedef enum {
 136:Core/Src/main.c ****     START_SCREEN,
 137:Core/Src/main.c ****     GAMING_SCREEN,
 138:Core/Src/main.c ****     GAME_OVER_SCREEN
 139:Core/Src/main.c **** } GameState;
 140:Core/Src/main.c **** 
 141:Core/Src/main.c **** // field array has a wall of 1 cells around
 142:Core/Src/main.c **** void initFA() {
 113              		.loc 1 142 15 is_stmt 1 view -0
 114              		.cfi_startproc
 115              		@ args = 0, pretend = 0, frame = 0
 116              		@ frame_needed = 0, uses_anonymous_args = 0
 117              		@ link register save eliminated.
 143:Core/Src/main.c **** 	for (int y = 0; y < 25; y++) {
 118              		.loc 1 143 2 view .LVU13
 119              	.LBB4:
 120              		.loc 1 143 7 view .LVU14
 121              	.LVL6:
 122              		.loc 1 143 11 is_stmt 0 view .LVU15
 123 0000 0021     		movs	r1, #0
 124              		.loc 1 143 2 view .LVU16
 125 0002 1CE0     		b	.L6
 126              	.LVL7:
 127              	.L7:
 128              	.LBB5:
 144:Core/Src/main.c **** 		for (int x = 0; x < 34; x++) {
 145:Core/Src/main.c **** 			if (x==0 || x==33 || y==24) {
 146:Core/Src/main.c **** 				fieldArray[y*34+x] = 1;
 129              		.loc 1 146 5 is_stmt 1 view .LVU17
 130              		.loc 1 146 17 is_stmt 0 view .LVU18
 131 0004 01EB0110 		add	r0, r1, r1, lsl #4
 132 0008 4200     		lsls	r2, r0, #1
 133              		.loc 1 146 20 view .LVU19
 134 000a 1A44     		add	r2, r2, r3
 135              		.loc 1 146 24 view .LVU20
 136 000c 0E48     		ldr	r0, .L15
 137 000e 4FF0010C 		mov	ip, #1
 138 0012 20F812C0 		strh	ip, [r0, r2, lsl #1]	@ movhi
 139              	.L9:
 144:Core/Src/main.c **** 		for (int x = 0; x < 34; x++) {
 140              		.loc 1 144 27 is_stmt 1 discriminator 2 view .LVU21
 144:Core/Src/main.c **** 		for (int x = 0; x < 34; x++) {
 141              		.loc 1 144 28 is_stmt 0 discriminator 2 view .LVU22
 142 0016 0133     		adds	r3, r3, #1
ARM GAS  /tmp/cce2Xn9k.s 			page 6


 143              	.LVL8:
 144              	.L11:
 144:Core/Src/main.c **** 		for (int x = 0; x < 34; x++) {
 145              		.loc 1 144 19 is_stmt 1 discriminator 1 view .LVU23
 144:Core/Src/main.c **** 		for (int x = 0; x < 34; x++) {
 146              		.loc 1 144 3 is_stmt 0 discriminator 1 view .LVU24
 147 0018 212B     		cmp	r3, #33
 148 001a 0FDC     		bgt	.L13
 145:Core/Src/main.c **** 				fieldArray[y*34+x] = 1;
 149              		.loc 1 145 4 is_stmt 1 view .LVU25
 145:Core/Src/main.c **** 				fieldArray[y*34+x] = 1;
 150              		.loc 1 145 7 is_stmt 0 view .LVU26
 151 001c 002B     		cmp	r3, #0
 152 001e F1D0     		beq	.L7
 145:Core/Src/main.c **** 				fieldArray[y*34+x] = 1;
 153              		.loc 1 145 13 discriminator 1 view .LVU27
 154 0020 212B     		cmp	r3, #33
 155 0022 EFD0     		beq	.L7
 145:Core/Src/main.c **** 				fieldArray[y*34+x] = 1;
 156              		.loc 1 145 22 discriminator 2 view .LVU28
 157 0024 1829     		cmp	r1, #24
 158 0026 EDD0     		beq	.L7
 147:Core/Src/main.c **** 			}
 148:Core/Src/main.c **** 			else fieldArray[y*34+x] = 0;
 159              		.loc 1 148 9 is_stmt 1 view .LVU29
 160              		.loc 1 148 21 is_stmt 0 view .LVU30
 161 0028 01EB0110 		add	r0, r1, r1, lsl #4
 162 002c 4200     		lsls	r2, r0, #1
 163              		.loc 1 148 24 view .LVU31
 164 002e 1A44     		add	r2, r2, r3
 165              		.loc 1 148 28 view .LVU32
 166 0030 0548     		ldr	r0, .L15
 167 0032 4FF0000C 		mov	ip, #0
 168 0036 20F812C0 		strh	ip, [r0, r2, lsl #1]	@ movhi
 169 003a ECE7     		b	.L9
 170              	.L13:
 171              		.loc 1 148 28 view .LVU33
 172              	.LBE5:
 143:Core/Src/main.c **** 		for (int x = 0; x < 34; x++) {
 173              		.loc 1 143 26 is_stmt 1 discriminator 2 view .LVU34
 143:Core/Src/main.c **** 		for (int x = 0; x < 34; x++) {
 174              		.loc 1 143 27 is_stmt 0 discriminator 2 view .LVU35
 175 003c 0131     		adds	r1, r1, #1
 176              	.LVL9:
 177              	.L6:
 143:Core/Src/main.c **** 		for (int x = 0; x < 34; x++) {
 178              		.loc 1 143 18 is_stmt 1 discriminator 1 view .LVU36
 143:Core/Src/main.c **** 		for (int x = 0; x < 34; x++) {
 179              		.loc 1 143 2 is_stmt 0 discriminator 1 view .LVU37
 180 003e 1829     		cmp	r1, #24
 181 0040 01DC     		bgt	.L14
 182              	.LBB6:
 144:Core/Src/main.c **** 			if (x==0 || x==33 || y==24) {
 183              		.loc 1 144 12 view .LVU38
 184 0042 0023     		movs	r3, #0
 185 0044 E8E7     		b	.L11
 186              	.L14:
ARM GAS  /tmp/cce2Xn9k.s 			page 7


 187              	.LBE6:
 188              	.LBE4:
 149:Core/Src/main.c **** 		}
 150:Core/Src/main.c **** 	}
 151:Core/Src/main.c **** }
 189              		.loc 1 151 1 view .LVU39
 190 0046 7047     		bx	lr
 191              	.L16:
 192              		.align	2
 193              	.L15:
 194 0048 00000000 		.word	.LANCHOR0
 195              		.cfi_endproc
 196              	.LFE1444:
 198              		.section	.text.initFR,"ax",%progbits
 199              		.align	1
 200              		.global	initFR
 201              		.syntax unified
 202              		.thumb
 203              		.thumb_func
 205              	initFR:
 206              	.LFB1445:
 152:Core/Src/main.c **** 
 153:Core/Src/main.c **** void initFR() {
 207              		.loc 1 153 15 is_stmt 1 view -0
 208              		.cfi_startproc
 209              		@ args = 0, pretend = 0, frame = 0
 210              		@ frame_needed = 0, uses_anonymous_args = 0
 211              		@ link register save eliminated.
 154:Core/Src/main.c **** 	for (int i = 0; i < 24; i++) {
 212              		.loc 1 154 2 view .LVU41
 213              	.LBB7:
 214              		.loc 1 154 7 view .LVU42
 215              	.LVL10:
 216              		.loc 1 154 11 is_stmt 0 view .LVU43
 217 0000 0023     		movs	r3, #0
 218              		.loc 1 154 2 view .LVU44
 219 0002 04E0     		b	.L18
 220              	.LVL11:
 221              	.L19:
 155:Core/Src/main.c **** 		fullRow[i] = 0;
 222              		.loc 1 155 3 is_stmt 1 discriminator 3 view .LVU45
 223              		.loc 1 155 14 is_stmt 0 discriminator 3 view .LVU46
 224 0004 034A     		ldr	r2, .L20
 225 0006 0021     		movs	r1, #0
 226 0008 42F82310 		str	r1, [r2, r3, lsl #2]
 154:Core/Src/main.c **** 	for (int i = 0; i < 24; i++) {
 227              		.loc 1 154 26 is_stmt 1 discriminator 3 view .LVU47
 154:Core/Src/main.c **** 	for (int i = 0; i < 24; i++) {
 228              		.loc 1 154 27 is_stmt 0 discriminator 3 view .LVU48
 229 000c 0133     		adds	r3, r3, #1
 230              	.LVL12:
 231              	.L18:
 154:Core/Src/main.c **** 	for (int i = 0; i < 24; i++) {
 232              		.loc 1 154 18 is_stmt 1 discriminator 1 view .LVU49
 154:Core/Src/main.c **** 	for (int i = 0; i < 24; i++) {
 233              		.loc 1 154 2 is_stmt 0 discriminator 1 view .LVU50
 234 000e 172B     		cmp	r3, #23
ARM GAS  /tmp/cce2Xn9k.s 			page 8


 235 0010 F8DD     		ble	.L19
 236              	.LBE7:
 156:Core/Src/main.c **** 	}
 157:Core/Src/main.c **** }
 237              		.loc 1 157 1 view .LVU51
 238 0012 7047     		bx	lr
 239              	.L21:
 240              		.align	2
 241              	.L20:
 242 0014 00000000 		.word	.LANCHOR1
 243              		.cfi_endproc
 244              	.LFE1445:
 246              		.section	.text.writeToFA,"ax",%progbits
 247              		.align	1
 248              		.global	writeToFA
 249              		.syntax unified
 250              		.thumb
 251              		.thumb_func
 253              	writeToFA:
 254              	.LFB1446:
 158:Core/Src/main.c **** 
 159:Core/Src/main.c **** 
 160:Core/Src/main.c **** void writeToFA(Tetromino t) {
 255              		.loc 1 160 29 is_stmt 1 view -0
 256              		.cfi_startproc
 257              		@ args = 48, pretend = 16, frame = 0
 258              		@ frame_needed = 0, uses_anonymous_args = 0
 259 0000 84B0     		sub	sp, sp, #16
 260              	.LCFI6:
 261              		.cfi_def_cfa_offset 16
 262 0002 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 263              	.LCFI7:
 264              		.cfi_def_cfa_offset 40
 265              		.cfi_offset 3, -40
 266              		.cfi_offset 4, -36
 267              		.cfi_offset 5, -32
 268              		.cfi_offset 6, -28
 269              		.cfi_offset 7, -24
 270              		.cfi_offset 14, -20
 271 0004 06AC     		add	r4, sp, #24
 272 0006 84E80F00 		stm	r4, {r0, r1, r2, r3}
 161:Core/Src/main.c ****     for (int y = 0; y < 4; y++) {
 273              		.loc 1 161 5 view .LVU53
 274              	.LBB8:
 275              		.loc 1 161 10 view .LVU54
 276              	.LVL13:
 277              		.loc 1 161 14 is_stmt 0 view .LVU55
 278 000a 0027     		movs	r7, #0
 279              		.loc 1 161 5 view .LVU56
 280 000c 26E0     		b	.L23
 281              	.LVL14:
 282              	.L24:
 283              	.LBB9:
 162:Core/Src/main.c ****         for (int x = 0; x < 4; x++) {
 284              		.loc 1 162 32 is_stmt 1 discriminator 2 view .LVU57
 285              		.loc 1 162 33 is_stmt 0 discriminator 2 view .LVU58
 286 000e 0135     		adds	r5, r5, #1
ARM GAS  /tmp/cce2Xn9k.s 			page 9


 287              	.LVL15:
 288              	.L26:
 289              		.loc 1 162 25 is_stmt 1 discriminator 1 view .LVU59
 290              		.loc 1 162 9 is_stmt 0 discriminator 1 view .LVU60
 291 0010 032D     		cmp	r5, #3
 292 0012 22DC     		bgt	.L29
 293              	.LBB10:
 163:Core/Src/main.c ****             int i = (t.y+y) * 34 + t.x+x;
 294              		.loc 1 163 13 is_stmt 1 view .LVU61
 295              		.loc 1 163 23 is_stmt 0 view .LVU62
 296 0014 119C     		ldr	r4, [sp, #68]
 297              		.loc 1 163 25 view .LVU63
 298 0016 3C44     		add	r4, r4, r7
 299              		.loc 1 163 29 view .LVU64
 300 0018 04EB0412 		add	r2, r4, r4, lsl #4
 301              		.loc 1 163 37 view .LVU65
 302 001c 109B     		ldr	r3, [sp, #64]
 303              		.loc 1 163 34 view .LVU66
 304 001e 03EB4203 		add	r3, r3, r2, lsl #1
 305              		.loc 1 163 17 view .LVU67
 306 0022 5E19     		adds	r6, r3, r5
 307              	.LVL16:
 164:Core/Src/main.c ****             uint16_t tetrominoValue = t.grid[rotateTetromino(x, y, t.rotation)];
 308              		.loc 1 164 13 is_stmt 1 view .LVU68
 309              		.loc 1 164 46 is_stmt 0 view .LVU69
 310 0024 069A     		ldr	r2, [sp, #24]
 311 0026 3946     		mov	r1, r7
 312 0028 2846     		mov	r0, r5
 313 002a FFF7FEFF 		bl	rotateTetromino
 314              	.LVL17:
 315              		.loc 1 164 22 view .LVU70
 316 002e 06AB     		add	r3, sp, #24
 317 0030 03EB4000 		add	r0, r3, r0, lsl #1
 318 0034 C388     		ldrh	r3, [r0, #6]
 319              	.LVL18:
 165:Core/Src/main.c ****             if (tetrominoValue != 0) {
 320              		.loc 1 165 13 is_stmt 1 view .LVU71
 321              		.loc 1 165 16 is_stmt 0 view .LVU72
 322 0036 002B     		cmp	r3, #0
 323 0038 E9D0     		beq	.L24
 166:Core/Src/main.c ****             	fieldArray[i] = tetrominoValue;
 324              		.loc 1 166 14 is_stmt 1 view .LVU73
 325              		.loc 1 166 28 is_stmt 0 view .LVU74
 326 003a 0C4A     		ldr	r2, .L31
 327 003c 22F81630 		strh	r3, [r2, r6, lsl #1]	@ movhi
 167:Core/Src/main.c ****             	fullRow[t.y+y] += 1;
 328              		.loc 1 167 14 is_stmt 1 view .LVU75
 329              		.loc 1 167 29 is_stmt 0 view .LVU76
 330 0040 0B4A     		ldr	r2, .L31+4
 331 0042 52F82430 		ldr	r3, [r2, r4, lsl #2]
 332              	.LVL19:
 333              		.loc 1 167 29 view .LVU77
 334 0046 0133     		adds	r3, r3, #1
 335 0048 42F82430 		str	r3, [r2, r4, lsl #2]
 168:Core/Src/main.c ****             	if (fullRow[t.y+y] == 32) score++;
 336              		.loc 1 168 14 is_stmt 1 view .LVU78
 337              		.loc 1 168 17 is_stmt 0 view .LVU79
ARM GAS  /tmp/cce2Xn9k.s 			page 10


 338 004c 202B     		cmp	r3, #32
 339 004e DED1     		bne	.L24
 340              		.loc 1 168 40 is_stmt 1 discriminator 1 view .LVU80
 341              		.loc 1 168 45 is_stmt 0 discriminator 1 view .LVU81
 342 0050 084A     		ldr	r2, .L31+8
 343 0052 1368     		ldr	r3, [r2]
 344 0054 0133     		adds	r3, r3, #1
 345 0056 1360     		str	r3, [r2]
 346 0058 D9E7     		b	.L24
 347              	.LVL20:
 348              	.L29:
 349              		.loc 1 168 45 discriminator 1 view .LVU82
 350              	.LBE10:
 351              	.LBE9:
 161:Core/Src/main.c ****         for (int x = 0; x < 4; x++) {
 352              		.loc 1 161 28 is_stmt 1 discriminator 2 view .LVU83
 161:Core/Src/main.c ****         for (int x = 0; x < 4; x++) {
 353              		.loc 1 161 29 is_stmt 0 discriminator 2 view .LVU84
 354 005a 0137     		adds	r7, r7, #1
 355              	.LVL21:
 356              	.L23:
 161:Core/Src/main.c ****         for (int x = 0; x < 4; x++) {
 357              		.loc 1 161 21 is_stmt 1 discriminator 1 view .LVU85
 161:Core/Src/main.c ****         for (int x = 0; x < 4; x++) {
 358              		.loc 1 161 5 is_stmt 0 discriminator 1 view .LVU86
 359 005c 032F     		cmp	r7, #3
 360 005e 01DC     		bgt	.L30
 361              	.LBB11:
 162:Core/Src/main.c ****             int i = (t.y+y) * 34 + t.x+x;
 362              		.loc 1 162 18 view .LVU87
 363 0060 0025     		movs	r5, #0
 364 0062 D5E7     		b	.L26
 365              	.L30:
 366              	.LBE11:
 367              	.LBE8:
 169:Core/Src/main.c ****             }
 170:Core/Src/main.c ****         }
 171:Core/Src/main.c ****     }
 172:Core/Src/main.c **** }
 368              		.loc 1 172 1 view .LVU88
 369 0064 BDE8F840 		pop	{r3, r4, r5, r6, r7, lr}
 370              	.LCFI8:
 371              		.cfi_restore 14
 372              		.cfi_restore 7
 373              		.cfi_restore 6
 374              		.cfi_restore 5
 375              		.cfi_restore 4
 376              		.cfi_restore 3
 377              		.cfi_def_cfa_offset 16
 378              	.LVL22:
 379              		.loc 1 172 1 view .LVU89
 380 0068 04B0     		add	sp, sp, #16
 381              	.LCFI9:
 382              		.cfi_def_cfa_offset 0
 383 006a 7047     		bx	lr
 384              	.L32:
 385              		.align	2
ARM GAS  /tmp/cce2Xn9k.s 			page 11


 386              	.L31:
 387 006c 00000000 		.word	.LANCHOR0
 388 0070 00000000 		.word	.LANCHOR1
 389 0074 00000000 		.word	.LANCHOR2
 390              		.cfi_endproc
 391              	.LFE1446:
 393              		.section	.text.collisions,"ax",%progbits
 394              		.align	1
 395              		.global	collisions
 396              		.syntax unified
 397              		.thumb
 398              		.thumb_func
 400              	collisions:
 401              	.LVL23:
 402              	.LFB1447:
 173:Core/Src/main.c **** 
 174:Core/Src/main.c **** 
 175:Core/Src/main.c **** int collisions(Tetromino t, int tx, int ty, int rotation) {
 403              		.loc 1 175 59 is_stmt 1 view -0
 404              		.cfi_startproc
 405              		@ args = 60, pretend = 16, frame = 0
 406              		@ frame_needed = 0, uses_anonymous_args = 0
 407              		.loc 1 175 59 is_stmt 0 view .LVU91
 408 0000 84B0     		sub	sp, sp, #16
 409              	.LCFI10:
 410              		.cfi_def_cfa_offset 16
 411 0002 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 412              	.LCFI11:
 413              		.cfi_def_cfa_offset 40
 414              		.cfi_offset 4, -40
 415              		.cfi_offset 5, -36
 416              		.cfi_offset 6, -32
 417              		.cfi_offset 7, -28
 418              		.cfi_offset 8, -24
 419              		.cfi_offset 14, -20
 420 0006 06AC     		add	r4, sp, #24
 421 0008 84E80F00 		stm	r4, {r0, r1, r2, r3}
 422 000c DDF84880 		ldr	r8, [sp, #72]
 423 0010 139F     		ldr	r7, [sp, #76]
 424 0012 149E     		ldr	r6, [sp, #80]
 176:Core/Src/main.c **** 	for (int y = 0; y < 4; y++) {
 425              		.loc 1 176 2 is_stmt 1 view .LVU92
 426              	.LBB12:
 427              		.loc 1 176 7 view .LVU93
 428              	.LVL24:
 429              		.loc 1 176 11 is_stmt 0 view .LVU94
 430 0014 0025     		movs	r5, #0
 431              		.loc 1 176 2 view .LVU95
 432 0016 20E0     		b	.L34
 433              	.LVL25:
 434              	.L35:
 435              	.LBB13:
 177:Core/Src/main.c **** 		for (int x = 0; x < 4; x++) {
 436              		.loc 1 177 26 is_stmt 1 discriminator 2 view .LVU96
 437              		.loc 1 177 27 is_stmt 0 discriminator 2 view .LVU97
 438 0018 0134     		adds	r4, r4, #1
 439              	.LVL26:
ARM GAS  /tmp/cce2Xn9k.s 			page 12


 440              	.L38:
 441              		.loc 1 177 19 is_stmt 1 discriminator 1 view .LVU98
 442              		.loc 1 177 3 is_stmt 0 discriminator 1 view .LVU99
 443 001a 032C     		cmp	r4, #3
 444 001c 1CDC     		bgt	.L42
 445              	.LBB14:
 178:Core/Src/main.c **** 
 179:Core/Src/main.c **** 			uint16_t tValue = t.grid[rotateTetromino(x, y, rotation)];
 446              		.loc 1 179 4 is_stmt 1 view .LVU100
 447              		.loc 1 179 29 is_stmt 0 view .LVU101
 448 001e 3246     		mov	r2, r6
 449 0020 2946     		mov	r1, r5
 450 0022 2046     		mov	r0, r4
 451 0024 FFF7FEFF 		bl	rotateTetromino
 452              	.LVL27:
 453              		.loc 1 179 13 view .LVU102
 454 0028 06AB     		add	r3, sp, #24
 455 002a 03EB4000 		add	r0, r3, r0, lsl #1
 456 002e C088     		ldrh	r0, [r0, #6]
 457              	.LVL28:
 180:Core/Src/main.c **** 			int fieldIndex = (ty + y) * 34 + (tx + x);
 458              		.loc 1 180 4 is_stmt 1 view .LVU103
 459              		.loc 1 180 25 is_stmt 0 view .LVU104
 460 0030 EB19     		adds	r3, r5, r7
 461              		.loc 1 180 30 view .LVU105
 462 0032 03EB0312 		add	r2, r3, r3, lsl #4
 463              		.loc 1 180 41 view .LVU106
 464 0036 04EB0801 		add	r1, r4, r8
 465              		.loc 1 180 8 view .LVU107
 466 003a 01EB4202 		add	r2, r1, r2, lsl #1
 467              	.LVL29:
 181:Core/Src/main.c **** 
 182:Core/Src/main.c **** 			if (tx+x >= 0 && tx+x < 34) {
 468              		.loc 1 182 4 is_stmt 1 view .LVU108
 469              		.loc 1 182 7 is_stmt 0 view .LVU109
 470 003e 2129     		cmp	r1, #33
 471 0040 EAD8     		bhi	.L35
 183:Core/Src/main.c **** 				if (ty + y >= 0 && ty + y < 25) {
 472              		.loc 1 183 5 is_stmt 1 view .LVU110
 473              		.loc 1 183 8 is_stmt 0 view .LVU111
 474 0042 182B     		cmp	r3, #24
 475 0044 E8D8     		bhi	.L35
 184:Core/Src/main.c **** 
 185:Core/Src/main.c **** 					if (tValue != 0 && fieldArray[fieldIndex] != 0) {
 476              		.loc 1 185 6 is_stmt 1 view .LVU112
 477              		.loc 1 185 9 is_stmt 0 view .LVU113
 478 0046 0028     		cmp	r0, #0
 479 0048 E6D0     		beq	.L35
 480              		.loc 1 185 35 discriminator 1 view .LVU114
 481 004a 084B     		ldr	r3, .L44
 482 004c 33F81230 		ldrh	r3, [r3, r2, lsl #1]
 483              		.loc 1 185 22 discriminator 1 view .LVU115
 484 0050 002B     		cmp	r3, #0
 485 0052 E1D0     		beq	.L35
 186:Core/Src/main.c **** 					// we get collision
 187:Core/Src/main.c **** 						return 1;
 486              		.loc 1 187 14 view .LVU116
ARM GAS  /tmp/cce2Xn9k.s 			page 13


 487 0054 0120     		movs	r0, #1
 488              	.LVL30:
 489              		.loc 1 187 14 view .LVU117
 490 0056 05E0     		b	.L33
 491              	.LVL31:
 492              	.L42:
 493              		.loc 1 187 14 view .LVU118
 494              	.LBE14:
 495              	.LBE13:
 176:Core/Src/main.c **** 		for (int x = 0; x < 4; x++) {
 496              		.loc 1 176 25 is_stmt 1 discriminator 2 view .LVU119
 176:Core/Src/main.c **** 		for (int x = 0; x < 4; x++) {
 497              		.loc 1 176 26 is_stmt 0 discriminator 2 view .LVU120
 498 0058 0135     		adds	r5, r5, #1
 499              	.LVL32:
 500              	.L34:
 176:Core/Src/main.c **** 		for (int x = 0; x < 4; x++) {
 501              		.loc 1 176 18 is_stmt 1 discriminator 1 view .LVU121
 176:Core/Src/main.c **** 		for (int x = 0; x < 4; x++) {
 502              		.loc 1 176 2 is_stmt 0 discriminator 1 view .LVU122
 503 005a 032D     		cmp	r5, #3
 504 005c 01DC     		bgt	.L43
 505              	.LBB15:
 177:Core/Src/main.c **** 
 506              		.loc 1 177 12 view .LVU123
 507 005e 0024     		movs	r4, #0
 508 0060 DBE7     		b	.L38
 509              	.L43:
 510              	.LBE15:
 511              	.LBE12:
 188:Core/Src/main.c **** 					}
 189:Core/Src/main.c **** 
 190:Core/Src/main.c **** 				}
 191:Core/Src/main.c **** 			}
 192:Core/Src/main.c **** 		}
 193:Core/Src/main.c **** 	}
 194:Core/Src/main.c **** 	return 0;
 512              		.loc 1 194 9 view .LVU124
 513 0062 0020     		movs	r0, #0
 514              	.L33:
 195:Core/Src/main.c **** }
 515              		.loc 1 195 1 view .LVU125
 516 0064 BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 517              	.LCFI12:
 518              		.cfi_restore 14
 519              		.cfi_restore 8
 520              		.cfi_restore 7
 521              		.cfi_restore 6
 522              		.cfi_restore 5
 523              		.cfi_restore 4
 524              		.cfi_def_cfa_offset 16
 525              	.LVL33:
 526              		.loc 1 195 1 view .LVU126
 527 0068 04B0     		add	sp, sp, #16
 528              	.LCFI13:
 529              		.cfi_def_cfa_offset 0
 530 006a 7047     		bx	lr
ARM GAS  /tmp/cce2Xn9k.s 			page 14


 531              	.L45:
 532              		.align	2
 533              	.L44:
 534 006c 00000000 		.word	.LANCHOR0
 535              		.cfi_endproc
 536              	.LFE1447:
 538              		.section	.text.pseudoRandom,"ax",%progbits
 539              		.align	1
 540              		.global	pseudoRandom
 541              		.syntax unified
 542              		.thumb
 543              		.thumb_func
 545              	pseudoRandom:
 546              	.LVL34:
 547              	.LFB1448:
 196:Core/Src/main.c **** 
 197:Core/Src/main.c **** 
 198:Core/Src/main.c **** int pseudoRandom(int diviser) {
 548              		.loc 1 198 31 is_stmt 1 view -0
 549              		.cfi_startproc
 550              		@ args = 0, pretend = 0, frame = 0
 551              		@ frame_needed = 0, uses_anonymous_args = 0
 552              		@ link register save eliminated.
 553              		.loc 1 198 31 is_stmt 0 view .LVU128
 554 0000 10B4     		push	{r4}
 555              	.LCFI14:
 556              		.cfi_def_cfa_offset 4
 557              		.cfi_offset 4, -4
 199:Core/Src/main.c ****     // Constants for a commonly-used LCG from Numerical Recipes
 200:Core/Src/main.c ****     const unsigned int m = 0x7fffffff;  // 2^31-1
 558              		.loc 1 200 5 is_stmt 1 view .LVU129
 559              	.LVL35:
 201:Core/Src/main.c ****     const unsigned int a = 1664525;
 560              		.loc 1 201 5 view .LVU130
 202:Core/Src/main.c ****     const unsigned int c = 1013904223;
 561              		.loc 1 202 5 view .LVU131
 203:Core/Src/main.c **** 
 204:Core/Src/main.c ****     seed = (a * seed + c) % m;
 562              		.loc 1 204 5 view .LVU132
 563              		.loc 1 204 15 is_stmt 0 view .LVU133
 564 0002 0C49     		ldr	r1, .L48
 565 0004 0B68     		ldr	r3, [r1]
 566              		.loc 1 204 22 view .LVU134
 567 0006 0C4C     		ldr	r4, .L48+4
 568 0008 0C4A     		ldr	r2, .L48+8
 569 000a 04FB0322 		mla	r2, r4, r3, r2
 570              		.loc 1 204 27 view .LVU135
 571 000e 0323     		movs	r3, #3
 572 0010 A3FB0243 		umull	r4, r3, r3, r2
 573 0014 A2EB030C 		sub	ip, r2, r3
 574 0018 03EB5C03 		add	r3, r3, ip, lsr #1
 575 001c 9B0F     		lsrs	r3, r3, #30
 576 001e C3EBC373 		rsb	r3, r3, r3, lsl #31
 577 0022 D31A     		subs	r3, r2, r3
 578              		.loc 1 204 10 view .LVU136
 579 0024 0B60     		str	r3, [r1]
 205:Core/Src/main.c **** 
ARM GAS  /tmp/cce2Xn9k.s 			page 15


 206:Core/Src/main.c ****     return seed % diviser;
 580              		.loc 1 206 5 is_stmt 1 view .LVU137
 581              		.loc 1 206 17 is_stmt 0 view .LVU138
 582 0026 93FBF0F2 		sdiv	r2, r3, r0
 207:Core/Src/main.c **** }
 583              		.loc 1 207 1 view .LVU139
 584 002a 00FB1230 		mls	r0, r0, r2, r3
 585              	.LVL36:
 586              		.loc 1 207 1 view .LVU140
 587 002e 5DF8044B 		ldr	r4, [sp], #4
 588              	.LCFI15:
 589              		.cfi_restore 4
 590              		.cfi_def_cfa_offset 0
 591 0032 7047     		bx	lr
 592              	.L49:
 593              		.align	2
 594              	.L48:
 595 0034 00000000 		.word	.LANCHOR3
 596 0038 0D661900 		.word	1664525
 597 003c 5FF36E3C 		.word	1013904223
 598              		.cfi_endproc
 599              	.LFE1448:
 601              		.section	.text.isButtonPressed,"ax",%progbits
 602              		.align	1
 603              		.global	isButtonPressed
 604              		.syntax unified
 605              		.thumb
 606              		.thumb_func
 608              	isButtonPressed:
 609              	.LVL37:
 610              	.LFB1449:
 208:Core/Src/main.c **** 
 209:Core/Src/main.c **** 
 210:Core/Src/main.c **** 
 211:Core/Src/main.c **** 
 212:Core/Src/main.c **** int isButtonPressed(ButtonState* button) {
 611              		.loc 1 212 42 is_stmt 1 view -0
 612              		.cfi_startproc
 613              		@ args = 0, pretend = 0, frame = 0
 614              		@ frame_needed = 0, uses_anonymous_args = 0
 615              		.loc 1 212 42 is_stmt 0 view .LVU142
 616 0000 70B5     		push	{r4, r5, r6, lr}
 617              	.LCFI16:
 618              		.cfi_def_cfa_offset 16
 619              		.cfi_offset 4, -16
 620              		.cfi_offset 5, -12
 621              		.cfi_offset 6, -8
 622              		.cfi_offset 14, -4
 623 0002 0546     		mov	r5, r0
 213:Core/Src/main.c ****     int currentState = !KBD_get_button_state(button->name);
 624              		.loc 1 213 5 is_stmt 1 view .LVU143
 625              		.loc 1 213 25 is_stmt 0 view .LVU144
 626 0004 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 627              	.LVL38:
 628              		.loc 1 213 25 view .LVU145
 629 0006 FFF7FEFF 		bl	KBD_get_button_state
 630              	.LVL39:
ARM GAS  /tmp/cce2Xn9k.s 			page 16


 631              		.loc 1 213 24 view .LVU146
 632 000a 0646     		mov	r6, r0
 633 000c B0FA80F4 		clz	r4, r0
 634 0010 6409     		lsrs	r4, r4, #5
 635              	.LVL40:
 214:Core/Src/main.c ****     uint32_t debounceInterval = 15;
 636              		.loc 1 214 5 is_stmt 1 view .LVU147
 215:Core/Src/main.c ****     uint32_t currentTick = HAL_GetTick();
 637              		.loc 1 215 5 view .LVU148
 638              		.loc 1 215 28 is_stmt 0 view .LVU149
 639 0012 FFF7FEFF 		bl	HAL_GetTick
 640              	.LVL41:
 216:Core/Src/main.c ****     int isPressed = 0; // false by default
 641              		.loc 1 216 5 is_stmt 1 view .LVU150
 217:Core/Src/main.c **** 
 218:Core/Src/main.c ****     if (currentState && !button->previousState && (currentTick - button->lastPressTime > debounceIn
 642              		.loc 1 218 5 view .LVU151
 643              		.loc 1 218 8 is_stmt 0 view .LVU152
 644 0016 4EB9     		cbnz	r6, .L52
 645 0018 0346     		mov	r3, r0
 646              		.loc 1 218 32 discriminator 1 view .LVU153
 647 001a 6868     		ldr	r0, [r5, #4]
 648              	.LVL42:
 649              		.loc 1 218 22 discriminator 1 view .LVU154
 650 001c 48B9     		cbnz	r0, .L53
 651              		.loc 1 218 72 discriminator 2 view .LVU155
 652 001e AA68     		ldr	r2, [r5, #8]
 653              		.loc 1 218 64 discriminator 2 view .LVU156
 654 0020 9A1A     		subs	r2, r3, r2
 655              		.loc 1 218 48 discriminator 2 view .LVU157
 656 0022 0F2A     		cmp	r2, #15
 657 0024 03D9     		bls	.L51
 219:Core/Src/main.c ****             button->lastPressTime = currentTick; // Update the last press time
 658              		.loc 1 219 13 is_stmt 1 view .LVU158
 659              		.loc 1 219 35 is_stmt 0 view .LVU159
 660 0026 AB60     		str	r3, [r5, #8]
 220:Core/Src/main.c ****             isPressed = 1;
 661              		.loc 1 220 13 is_stmt 1 view .LVU160
 662              	.LVL43:
 663              		.loc 1 220 23 is_stmt 0 view .LVU161
 664 0028 0120     		movs	r0, #1
 665 002a 00E0     		b	.L51
 666              	.LVL44:
 667              	.L52:
 216:Core/Src/main.c **** 
 668              		.loc 1 216 9 view .LVU162
 669 002c 0020     		movs	r0, #0
 670              	.LVL45:
 671              	.L51:
 221:Core/Src/main.c ****         }
 222:Core/Src/main.c **** 
 223:Core/Src/main.c **** 
 224:Core/Src/main.c ****     button->previousState = currentState;
 672              		.loc 1 224 5 is_stmt 1 view .LVU163
 673              		.loc 1 224 27 is_stmt 0 view .LVU164
 674 002e 6C60     		str	r4, [r5, #4]
 225:Core/Src/main.c ****     return isPressed;
ARM GAS  /tmp/cce2Xn9k.s 			page 17


 675              		.loc 1 225 5 is_stmt 1 view .LVU165
 226:Core/Src/main.c **** }
 676              		.loc 1 226 1 is_stmt 0 view .LVU166
 677 0030 70BD     		pop	{r4, r5, r6, pc}
 678              	.LVL46:
 679              	.L53:
 216:Core/Src/main.c **** 
 680              		.loc 1 216 9 view .LVU167
 681 0032 0020     		movs	r0, #0
 682 0034 FBE7     		b	.L51
 683              		.cfi_endproc
 684              	.LFE1449:
 686              		.section	.text.handleButtons,"ax",%progbits
 687              		.align	1
 688              		.global	handleButtons
 689              		.syntax unified
 690              		.thumb
 691              		.thumb_func
 693              	handleButtons:
 694              	.LFB1450:
 227:Core/Src/main.c **** 
 228:Core/Src/main.c **** int handleButtons() {
 695              		.loc 1 228 21 is_stmt 1 view -0
 696              		.cfi_startproc
 697              		@ args = 0, pretend = 0, frame = 0
 698              		@ frame_needed = 0, uses_anonymous_args = 0
 699 0000 10B5     		push	{r4, lr}
 700              	.LCFI17:
 701              		.cfi_def_cfa_offset 8
 702              		.cfi_offset 4, -8
 703              		.cfi_offset 14, -4
 229:Core/Src/main.c ****   if (isButtonPressed(&right)) return 1;
 704              		.loc 1 229 3 view .LVU169
 705              		.loc 1 229 7 is_stmt 0 view .LVU170
 706 0002 1348     		ldr	r0, .L64
 707 0004 FFF7FEFF 		bl	isButtonPressed
 708              	.LVL47:
 709              		.loc 1 229 6 view .LVU171
 710 0008 10B1     		cbz	r0, .L63
 711              		.loc 1 229 39 view .LVU172
 712 000a 0124     		movs	r4, #1
 713              	.L55:
 230:Core/Src/main.c ****   if (isButtonPressed(&left)) return 3;
 231:Core/Src/main.c ****   if (isButtonPressed(&up)) return 0;
 232:Core/Src/main.c ****   if (isButtonPressed(&down)) return 2;
 233:Core/Src/main.c ****   if (isButtonPressed(&ok)) return 5;
 234:Core/Src/main.c ****   if (isButtonPressed(&esc)) return 6;
 235:Core/Src/main.c ****   else return 4;
 236:Core/Src/main.c **** }
 714              		.loc 1 236 1 view .LVU173
 715 000c 2046     		mov	r0, r4
 716 000e 10BD     		pop	{r4, pc}
 717              	.L63:
 230:Core/Src/main.c ****   if (isButtonPressed(&left)) return 3;
 718              		.loc 1 230 3 is_stmt 1 view .LVU174
 230:Core/Src/main.c ****   if (isButtonPressed(&left)) return 3;
 719              		.loc 1 230 7 is_stmt 0 view .LVU175
ARM GAS  /tmp/cce2Xn9k.s 			page 18


 720 0010 1048     		ldr	r0, .L64+4
 721 0012 FFF7FEFF 		bl	isButtonPressed
 722              	.LVL48:
 230:Core/Src/main.c ****   if (isButtonPressed(&left)) return 3;
 723              		.loc 1 230 6 view .LVU176
 724 0016 0446     		mov	r4, r0
 725 0018 90B9     		cbnz	r0, .L58
 231:Core/Src/main.c ****   if (isButtonPressed(&down)) return 2;
 726              		.loc 1 231 3 is_stmt 1 view .LVU177
 231:Core/Src/main.c ****   if (isButtonPressed(&down)) return 2;
 727              		.loc 1 231 7 is_stmt 0 view .LVU178
 728 001a 0F48     		ldr	r0, .L64+8
 729 001c FFF7FEFF 		bl	isButtonPressed
 730              	.LVL49:
 231:Core/Src/main.c ****   if (isButtonPressed(&down)) return 2;
 731              		.loc 1 231 6 view .LVU179
 732 0020 0028     		cmp	r0, #0
 733 0022 F3D1     		bne	.L55
 232:Core/Src/main.c ****   if (isButtonPressed(&ok)) return 5;
 734              		.loc 1 232 3 is_stmt 1 view .LVU180
 232:Core/Src/main.c ****   if (isButtonPressed(&ok)) return 5;
 735              		.loc 1 232 7 is_stmt 0 view .LVU181
 736 0024 0D48     		ldr	r0, .L64+12
 737 0026 FFF7FEFF 		bl	isButtonPressed
 738              	.LVL50:
 232:Core/Src/main.c ****   if (isButtonPressed(&ok)) return 5;
 739              		.loc 1 232 6 view .LVU182
 740 002a 58B9     		cbnz	r0, .L59
 233:Core/Src/main.c ****   if (isButtonPressed(&esc)) return 6;
 741              		.loc 1 233 3 is_stmt 1 view .LVU183
 233:Core/Src/main.c ****   if (isButtonPressed(&esc)) return 6;
 742              		.loc 1 233 7 is_stmt 0 view .LVU184
 743 002c 0C48     		ldr	r0, .L64+16
 744 002e FFF7FEFF 		bl	isButtonPressed
 745              	.LVL51:
 233:Core/Src/main.c ****   if (isButtonPressed(&esc)) return 6;
 746              		.loc 1 233 6 view .LVU185
 747 0032 48B9     		cbnz	r0, .L60
 234:Core/Src/main.c ****   else return 4;
 748              		.loc 1 234 3 is_stmt 1 view .LVU186
 234:Core/Src/main.c ****   else return 4;
 749              		.loc 1 234 7 is_stmt 0 view .LVU187
 750 0034 0B48     		ldr	r0, .L64+20
 751 0036 FFF7FEFF 		bl	isButtonPressed
 752              	.LVL52:
 234:Core/Src/main.c ****   else return 4;
 753              		.loc 1 234 6 view .LVU188
 754 003a 38B1     		cbz	r0, .L61
 234:Core/Src/main.c ****   else return 4;
 755              		.loc 1 234 37 view .LVU189
 756 003c 0624     		movs	r4, #6
 757 003e E5E7     		b	.L55
 758              	.L58:
 230:Core/Src/main.c ****   if (isButtonPressed(&up)) return 0;
 759              		.loc 1 230 38 view .LVU190
 760 0040 0324     		movs	r4, #3
 761 0042 E3E7     		b	.L55
ARM GAS  /tmp/cce2Xn9k.s 			page 19


 762              	.L59:
 232:Core/Src/main.c ****   if (isButtonPressed(&ok)) return 5;
 763              		.loc 1 232 38 view .LVU191
 764 0044 0224     		movs	r4, #2
 765 0046 E1E7     		b	.L55
 766              	.L60:
 233:Core/Src/main.c ****   if (isButtonPressed(&esc)) return 6;
 767              		.loc 1 233 36 view .LVU192
 768 0048 0524     		movs	r4, #5
 769 004a DFE7     		b	.L55
 770              	.L61:
 235:Core/Src/main.c **** }
 771              		.loc 1 235 15 view .LVU193
 772 004c 0424     		movs	r4, #4
 773 004e DDE7     		b	.L55
 774              	.L65:
 775              		.align	2
 776              	.L64:
 777 0050 00000000 		.word	.LANCHOR4
 778 0054 00000000 		.word	.LANCHOR5
 779 0058 00000000 		.word	.LANCHOR6
 780 005c 00000000 		.word	.LANCHOR7
 781 0060 00000000 		.word	.LANCHOR8
 782 0064 00000000 		.word	.LANCHOR9
 783              		.cfi_endproc
 784              	.LFE1450:
 786              		.section	.text.handleJoystick,"ax",%progbits
 787              		.align	1
 788              		.global	handleJoystick
 789              		.syntax unified
 790              		.thumb
 791              		.thumb_func
 793              	handleJoystick:
 794              	.LFB1451:
 237:Core/Src/main.c **** 
 238:Core/Src/main.c **** 
 239:Core/Src/main.c **** int handleJoystick() {
 795              		.loc 1 239 22 is_stmt 1 view -0
 796              		.cfi_startproc
 797              		@ args = 0, pretend = 0, frame = 0
 798              		@ frame_needed = 0, uses_anonymous_args = 0
 799 0000 38B5     		push	{r3, r4, r5, lr}
 800              	.LCFI18:
 801              		.cfi_def_cfa_offset 16
 802              		.cfi_offset 3, -16
 803              		.cfi_offset 4, -12
 804              		.cfi_offset 5, -8
 805              		.cfi_offset 14, -4
 240:Core/Src/main.c **** 	HAL_ADC_Start(&hadc4);
 806              		.loc 1 240 2 view .LVU195
 807 0002 174C     		ldr	r4, .L71
 808 0004 2046     		mov	r0, r4
 809 0006 FFF7FEFF 		bl	HAL_ADC_Start
 810              	.LVL53:
 241:Core/Src/main.c **** 	HAL_ADC_PollForConversion(&hadc4,10);// Waiting for ADC conversion
 811              		.loc 1 241 2 view .LVU196
 812 000a 0A21     		movs	r1, #10
ARM GAS  /tmp/cce2Xn9k.s 			page 20


 813 000c 2046     		mov	r0, r4
 814 000e FFF7FEFF 		bl	HAL_ADC_PollForConversion
 815              	.LVL54:
 242:Core/Src/main.c **** 	joystick_raw.x=HAL_ADC_GetValue(&hadc4);
 816              		.loc 1 242 2 view .LVU197
 817              		.loc 1 242 17 is_stmt 0 view .LVU198
 818 0012 2046     		mov	r0, r4
 819 0014 FFF7FEFF 		bl	HAL_ADC_GetValue
 820              	.LVL55:
 821              		.loc 1 242 16 view .LVU199
 822 0018 124D     		ldr	r5, .L71+4
 823 001a 2860     		str	r0, [r5]
 243:Core/Src/main.c **** 
 244:Core/Src/main.c **** 	HAL_ADC_Start(&hadc4);
 824              		.loc 1 244 2 is_stmt 1 view .LVU200
 825 001c 2046     		mov	r0, r4
 826 001e FFF7FEFF 		bl	HAL_ADC_Start
 827              	.LVL56:
 245:Core/Src/main.c **** 	HAL_ADC_PollForConversion(&hadc4,10);// Waiting for ADC conversion
 828              		.loc 1 245 2 view .LVU201
 829 0022 0A21     		movs	r1, #10
 830 0024 2046     		mov	r0, r4
 831 0026 FFF7FEFF 		bl	HAL_ADC_PollForConversion
 832              	.LVL57:
 246:Core/Src/main.c **** 	joystick_raw.y=HAL_ADC_GetValue(&hadc4);
 833              		.loc 1 246 2 view .LVU202
 834              		.loc 1 246 17 is_stmt 0 view .LVU203
 835 002a 2046     		mov	r0, r4
 836 002c FFF7FEFF 		bl	HAL_ADC_GetValue
 837              	.LVL58:
 838              		.loc 1 246 16 view .LVU204
 839 0030 6860     		str	r0, [r5, #4]
 247:Core/Src/main.c **** 	HAL_ADC_Stop(&hadc4);
 840              		.loc 1 247 2 is_stmt 1 view .LVU205
 841 0032 2046     		mov	r0, r4
 842 0034 FFF7FEFF 		bl	HAL_ADC_Stop
 843              	.LVL59:
 248:Core/Src/main.c **** 
 249:Core/Src/main.c **** 	joystick_get(&joystick_raw, &joystick_out, &joystick);
 844              		.loc 1 249 2 view .LVU206
 845 0038 0B4C     		ldr	r4, .L71+8
 846 003a 0C4A     		ldr	r2, .L71+12
 847 003c 2146     		mov	r1, r4
 848 003e 2846     		mov	r0, r5
 849 0040 FFF7FEFF 		bl	joystick_get
 850              	.LVL60:
 250:Core/Src/main.c **** 	if (joystick_out.x > 0) return 1;
 851              		.loc 1 250 2 view .LVU207
 852              		.loc 1 250 18 is_stmt 0 view .LVU208
 853 0044 2368     		ldr	r3, [r4]
 854              		.loc 1 250 5 view .LVU209
 855 0046 002B     		cmp	r3, #0
 856 0048 04DC     		bgt	.L68
 251:Core/Src/main.c **** 	else if (joystick_out.x <-18) return -1;
 857              		.loc 1 251 7 is_stmt 1 view .LVU210
 858              		.loc 1 251 10 is_stmt 0 view .LVU211
 859 004a 13F1120F 		cmn	r3, #18
ARM GAS  /tmp/cce2Xn9k.s 			page 21


 860 004e 03DB     		blt	.L69
 252:Core/Src/main.c **** 	return 0;
 861              		.loc 1 252 9 view .LVU212
 862 0050 0020     		movs	r0, #0
 863 0052 00E0     		b	.L66
 864              	.L68:
 250:Core/Src/main.c **** 	if (joystick_out.x > 0) return 1;
 865              		.loc 1 250 33 view .LVU213
 866 0054 0120     		movs	r0, #1
 867              	.L66:
 253:Core/Src/main.c **** }
 868              		.loc 1 253 1 view .LVU214
 869 0056 38BD     		pop	{r3, r4, r5, pc}
 870              	.L69:
 251:Core/Src/main.c **** 	else if (joystick_out.x <-18) return -1;
 871              		.loc 1 251 39 view .LVU215
 872 0058 4FF0FF30 		mov	r0, #-1
 873 005c FBE7     		b	.L66
 874              	.L72:
 875 005e 00BF     		.align	2
 876              	.L71:
 877 0060 00000000 		.word	hadc4
 878 0064 00000000 		.word	.LANCHOR10
 879 0068 00000000 		.word	.LANCHOR12
 880 006c 00000000 		.word	.LANCHOR11
 881              		.cfi_endproc
 882              	.LFE1451:
 884              		.section	.rodata.DrawStartScreen.str1.4,"aMS",%progbits,1
 885              		.align	2
 886              	.LC0:
 887 0000 54455452 		.ascii	"TETRIS\000"
 887      495300
 888 0007 00       		.align	2
 889              	.LC1:
 890 0008 50524553 		.ascii	"PRESS OK TO PLAY\000"
 890      53204F4B 
 890      20544F20 
 890      504C4159 
 890      00
 891 0019 000000   		.align	2
 892              	.LC2:
 893 001c 524F5441 		.ascii	"ROTATIONS ENABLED\000"
 893      54494F4E 
 893      5320454E 
 893      41424C45 
 893      4400
 894 002e 0000     		.align	2
 895              	.LC3:
 896 0030 524F5441 		.ascii	"ROTATIONS DISABLED\000"
 896      54494F4E 
 896      53204449 
 896      5341424C 
 896      454400
 897              		.section	.text.DrawStartScreen,"ax",%progbits
 898              		.align	1
 899              		.global	DrawStartScreen
 900              		.syntax unified
ARM GAS  /tmp/cce2Xn9k.s 			page 22


 901              		.thumb
 902              		.thumb_func
 904              	DrawStartScreen:
 905              	.LFB1452:
 254:Core/Src/main.c **** 
 255:Core/Src/main.c **** 
 256:Core/Src/main.c **** void DrawStartScreen()
 257:Core/Src/main.c **** {
 906              		.loc 1 257 1 is_stmt 1 view -0
 907              		.cfi_startproc
 908              		@ args = 0, pretend = 0, frame = 0
 909              		@ frame_needed = 0, uses_anonymous_args = 0
 910 0000 38B5     		push	{r3, r4, r5, lr}
 911              	.LCFI19:
 912              		.cfi_def_cfa_offset 16
 913              		.cfi_offset 3, -16
 914              		.cfi_offset 4, -12
 915              		.cfi_offset 5, -8
 916              		.cfi_offset 14, -4
 258:Core/Src/main.c **** 		UG_FontSelect(&FONT_32X53);
 917              		.loc 1 258 3 view .LVU217
 918 0002 1D48     		ldr	r0, .L79
 919 0004 FFF7FEFF 		bl	UG_FontSelect
 920              	.LVL61:
 259:Core/Src/main.c **** 		UG_SetForecolor(C_GREEN);
 921              		.loc 1 259 3 view .LVU218
 922 0008 4FF4FC60 		mov	r0, #2016
 923 000c FFF7FEFF 		bl	UG_SetForecolor
 924              	.LVL62:
 260:Core/Src/main.c **** 		UG_PutString(p_x-2,p_y,"TETRIS");
 925              		.loc 1 260 3 view .LVU219
 926 0010 1A4D     		ldr	r5, .L79+4
 927 0012 1B4C     		ldr	r4, .L79+8
 928 0014 2088     		ldrh	r0, [r4]
 929 0016 1B4A     		ldr	r2, .L79+12
 930 0018 2988     		ldrh	r1, [r5]
 931 001a 0238     		subs	r0, r0, #2
 932 001c FFF7FEFF 		bl	UG_PutString
 933              	.LVL63:
 261:Core/Src/main.c **** 		UG_FontSelect(&FONT_12X16);
 934              		.loc 1 261 3 view .LVU220
 935 0020 1948     		ldr	r0, .L79+16
 936 0022 FFF7FEFF 		bl	UG_FontSelect
 937              	.LVL64:
 262:Core/Src/main.c **** 		UG_SetForecolor(C_WHITE);
 938              		.loc 1 262 3 view .LVU221
 939 0026 4FF6FF70 		movw	r0, #65535
 940 002a FFF7FEFF 		bl	UG_SetForecolor
 941              	.LVL65:
 263:Core/Src/main.c **** 		UG_PutString(p_x-8, p_y + 100,"PRESS OK TO PLAY");
 942              		.loc 1 263 3 view .LVU222
 943 002e 2988     		ldrh	r1, [r5]
 944 0030 2088     		ldrh	r0, [r4]
 945 0032 164A     		ldr	r2, .L79+20
 946 0034 6431     		adds	r1, r1, #100
 947 0036 0838     		subs	r0, r0, #8
 948 0038 FFF7FEFF 		bl	UG_PutString
ARM GAS  /tmp/cce2Xn9k.s 			page 23


 949              	.LVL66:
 264:Core/Src/main.c **** 		if (rotations == 1) UG_PutString(p_x-20, p_y + 150,"ROTATIONS ENABLED");
 950              		.loc 1 264 3 view .LVU223
 951              		.loc 1 264 17 is_stmt 0 view .LVU224
 952 003c 144B     		ldr	r3, .L79+24
 953 003e 1B68     		ldr	r3, [r3]
 954              		.loc 1 264 6 view .LVU225
 955 0040 012B     		cmp	r3, #1
 956 0042 06D0     		beq	.L77
 957              	.L74:
 265:Core/Src/main.c **** 		if (rotations == 0) UG_PutString(p_x-20, p_y + 150,"ROTATIONS DISABLED");
 958              		.loc 1 265 3 is_stmt 1 view .LVU226
 959              		.loc 1 265 17 is_stmt 0 view .LVU227
 960 0044 124B     		ldr	r3, .L79+24
 961 0046 1B68     		ldr	r3, [r3]
 962              		.loc 1 265 6 view .LVU228
 963 0048 5BB1     		cbz	r3, .L78
 964              	.L75:
 266:Core/Src/main.c **** 		HAL_Delay(100);
 965              		.loc 1 266 3 is_stmt 1 view .LVU229
 966 004a 6420     		movs	r0, #100
 967 004c FFF7FEFF 		bl	HAL_Delay
 968              	.LVL67:
 267:Core/Src/main.c **** 
 268:Core/Src/main.c **** }
 969              		.loc 1 268 1 is_stmt 0 view .LVU230
 970 0050 38BD     		pop	{r3, r4, r5, pc}
 971              	.L77:
 264:Core/Src/main.c **** 		if (rotations == 0) UG_PutString(p_x-20, p_y + 150,"ROTATIONS DISABLED");
 972              		.loc 1 264 23 is_stmt 1 discriminator 1 view .LVU231
 973 0052 2988     		ldrh	r1, [r5]
 974 0054 2088     		ldrh	r0, [r4]
 975 0056 0F4A     		ldr	r2, .L79+28
 976 0058 9631     		adds	r1, r1, #150
 977 005a 1438     		subs	r0, r0, #20
 978 005c FFF7FEFF 		bl	UG_PutString
 979              	.LVL68:
 980 0060 F0E7     		b	.L74
 981              	.L78:
 265:Core/Src/main.c **** 		HAL_Delay(100);
 982              		.loc 1 265 23 discriminator 1 view .LVU232
 983 0062 064B     		ldr	r3, .L79+4
 984 0064 1988     		ldrh	r1, [r3]
 985 0066 064B     		ldr	r3, .L79+8
 986 0068 1888     		ldrh	r0, [r3]
 987 006a 0B4A     		ldr	r2, .L79+32
 988 006c 9631     		adds	r1, r1, #150
 989 006e 1438     		subs	r0, r0, #20
 990 0070 FFF7FEFF 		bl	UG_PutString
 991              	.LVL69:
 992 0074 E9E7     		b	.L75
 993              	.L80:
 994 0076 00BF     		.align	2
 995              	.L79:
 996 0078 00000000 		.word	FONT_32X53
 997 007c 00000000 		.word	.LANCHOR13
 998 0080 00000000 		.word	.LANCHOR14
ARM GAS  /tmp/cce2Xn9k.s 			page 24


 999 0084 00000000 		.word	.LC0
 1000 0088 00000000 		.word	FONT_12X16
 1001 008c 08000000 		.word	.LC1
 1002 0090 00000000 		.word	.LANCHOR15
 1003 0094 1C000000 		.word	.LC2
 1004 0098 30000000 		.word	.LC3
 1005              		.cfi_endproc
 1006              	.LFE1452:
 1008              		.section	.rodata.DrawGameOverScreen.str1.4,"aMS",%progbits,1
 1009              		.align	2
 1010              	.LC4:
 1011 0000 256400   		.ascii	"%d\000"
 1012 0003 00       		.align	2
 1013              	.LC5:
 1014 0004 47414D45 		.ascii	"GAME OVER\000"
 1014      204F5645 
 1014      5200
 1015 000e 0000     		.align	2
 1016              	.LC6:
 1017 0010 53434F52 		.ascii	"SCORE:\000"
 1017      453A00
 1018 0017 00       		.align	2
 1019              	.LC7:
 1020 0018 50524553 		.ascii	"PRESS OK TO TRY AGAIN\000"
 1020      53204F4B 
 1020      20544F20 
 1020      54525920 
 1020      41474149 
 1021              		.section	.text.DrawGameOverScreen,"ax",%progbits
 1022              		.align	1
 1023              		.global	DrawGameOverScreen
 1024              		.syntax unified
 1025              		.thumb
 1026              		.thumb_func
 1028              	DrawGameOverScreen:
 1029              	.LFB1453:
 269:Core/Src/main.c **** 
 270:Core/Src/main.c **** 
 271:Core/Src/main.c **** void DrawGameOverScreen()
 272:Core/Src/main.c **** {
 1030              		.loc 1 272 1 view -0
 1031              		.cfi_startproc
 1032              		@ args = 0, pretend = 0, frame = 16
 1033              		@ frame_needed = 0, uses_anonymous_args = 0
 1034 0000 10B5     		push	{r4, lr}
 1035              	.LCFI20:
 1036              		.cfi_def_cfa_offset 8
 1037              		.cfi_offset 4, -8
 1038              		.cfi_offset 14, -4
 1039 0002 84B0     		sub	sp, sp, #16
 1040              	.LCFI21:
 1041              		.cfi_def_cfa_offset 24
 273:Core/Src/main.c **** 		UG_FontSelect(&FONT_32X53);
 1042              		.loc 1 273 3 view .LVU234
 1043 0004 1848     		ldr	r0, .L83
 1044 0006 FFF7FEFF 		bl	UG_FontSelect
 1045              	.LVL70:
ARM GAS  /tmp/cce2Xn9k.s 			page 25


 274:Core/Src/main.c **** 
 275:Core/Src/main.c **** 		char scoreString[10];
 1046              		.loc 1 275 3 view .LVU235
 276:Core/Src/main.c **** 		sprintf(scoreString, "%d", score);
 1047              		.loc 1 276 3 view .LVU236
 1048 000a 184B     		ldr	r3, .L83+4
 1049 000c 1A68     		ldr	r2, [r3]
 1050 000e 1849     		ldr	r1, .L83+8
 1051 0010 01A8     		add	r0, sp, #4
 1052 0012 FFF7FEFF 		bl	sprintf
 1053              	.LVL71:
 277:Core/Src/main.c **** 
 278:Core/Src/main.c **** 		UG_SetForecolor(C_RED);
 1054              		.loc 1 278 3 view .LVU237
 1055 0016 4FF47840 		mov	r0, #63488
 1056 001a FFF7FEFF 		bl	UG_SetForecolor
 1057              	.LVL72:
 279:Core/Src/main.c **** 		UG_PutString(10,p_y,"GAME OVER");
 1058              		.loc 1 279 3 view .LVU238
 1059 001e 154C     		ldr	r4, .L83+12
 1060 0020 154A     		ldr	r2, .L83+16
 1061 0022 2188     		ldrh	r1, [r4]
 1062 0024 0A20     		movs	r0, #10
 1063 0026 FFF7FEFF 		bl	UG_PutString
 1064              	.LVL73:
 280:Core/Src/main.c **** 		UG_FontSelect(&FONT_12X16);
 1065              		.loc 1 280 3 view .LVU239
 1066 002a 1448     		ldr	r0, .L83+20
 1067 002c FFF7FEFF 		bl	UG_FontSelect
 1068              	.LVL74:
 281:Core/Src/main.c **** 		UG_SetForecolor(C_WHITE);
 1069              		.loc 1 281 3 view .LVU240
 1070 0030 4FF6FF70 		movw	r0, #65535
 1071 0034 FFF7FEFF 		bl	UG_SetForecolor
 1072              	.LVL75:
 282:Core/Src/main.c **** 		UG_PutString(100,p_y + 100,"SCORE:");
 1073              		.loc 1 282 3 view .LVU241
 1074 0038 2188     		ldrh	r1, [r4]
 1075 003a 114A     		ldr	r2, .L83+24
 1076 003c 6431     		adds	r1, r1, #100
 1077 003e 6420     		movs	r0, #100
 1078 0040 FFF7FEFF 		bl	UG_PutString
 1079              	.LVL76:
 283:Core/Src/main.c **** 		UG_PutString(190,p_y + 100, scoreString);
 1080              		.loc 1 283 3 view .LVU242
 1081 0044 2188     		ldrh	r1, [r4]
 1082 0046 01AA     		add	r2, sp, #4
 1083 0048 6431     		adds	r1, r1, #100
 1084 004a BE20     		movs	r0, #190
 1085 004c FFF7FEFF 		bl	UG_PutString
 1086              	.LVL77:
 284:Core/Src/main.c **** 		UG_PutString(21,p_y + 180,"PRESS OK TO TRY AGAIN");
 1087              		.loc 1 284 3 view .LVU243
 1088 0050 2188     		ldrh	r1, [r4]
 1089 0052 0C4A     		ldr	r2, .L83+28
 1090 0054 B431     		adds	r1, r1, #180
 1091 0056 1520     		movs	r0, #21
ARM GAS  /tmp/cce2Xn9k.s 			page 26


 1092 0058 FFF7FEFF 		bl	UG_PutString
 1093              	.LVL78:
 285:Core/Src/main.c **** 		HAL_Delay(100);
 1094              		.loc 1 285 3 view .LVU244
 1095 005c 6420     		movs	r0, #100
 1096 005e FFF7FEFF 		bl	HAL_Delay
 1097              	.LVL79:
 286:Core/Src/main.c **** 
 287:Core/Src/main.c **** }
 1098              		.loc 1 287 1 is_stmt 0 view .LVU245
 1099 0062 04B0     		add	sp, sp, #16
 1100              	.LCFI22:
 1101              		.cfi_def_cfa_offset 8
 1102              		@ sp needed
 1103 0064 10BD     		pop	{r4, pc}
 1104              	.L84:
 1105 0066 00BF     		.align	2
 1106              	.L83:
 1107 0068 00000000 		.word	FONT_32X53
 1108 006c 00000000 		.word	.LANCHOR2
 1109 0070 00000000 		.word	.LC4
 1110 0074 00000000 		.word	.LANCHOR13
 1111 0078 04000000 		.word	.LC5
 1112 007c 00000000 		.word	FONT_12X16
 1113 0080 10000000 		.word	.LC6
 1114 0084 18000000 		.word	.LC7
 1115              		.cfi_endproc
 1116              	.LFE1453:
 1118              		.section	.text.toggle,"ax",%progbits
 1119              		.align	1
 1120              		.global	toggle
 1121              		.syntax unified
 1122              		.thumb
 1123              		.thumb_func
 1125              	toggle:
 1126              	.LVL80:
 1127              	.LFB1454:
 288:Core/Src/main.c **** 
 289:Core/Src/main.c **** int toggle(int rotations) {
 1128              		.loc 1 289 27 is_stmt 1 view -0
 1129              		.cfi_startproc
 1130              		@ args = 0, pretend = 0, frame = 0
 1131              		@ frame_needed = 0, uses_anonymous_args = 0
 1132              		@ link register save eliminated.
 290:Core/Src/main.c **** 	if (rotations == 1) return 0;
 1133              		.loc 1 290 2 view .LVU247
 1134              		.loc 1 290 5 is_stmt 0 view .LVU248
 1135 0000 0128     		cmp	r0, #1
 1136 0002 01D0     		beq	.L87
 291:Core/Src/main.c **** 	if (rotations == 0) return 1;
 1137              		.loc 1 291 2 is_stmt 1 view .LVU249
 1138              		.loc 1 291 5 is_stmt 0 view .LVU250
 1139 0004 10B1     		cbz	r0, .L88
 1140              	.LVL81:
 292:Core/Src/main.c **** }
 1141              		.loc 1 292 1 view .LVU251
 1142 0006 7047     		bx	lr
ARM GAS  /tmp/cce2Xn9k.s 			page 27


 1143              	.LVL82:
 1144              	.L87:
 290:Core/Src/main.c **** 	if (rotations == 1) return 0;
 1145              		.loc 1 290 29 view .LVU252
 1146 0008 0020     		movs	r0, #0
 1147              	.LVL83:
 290:Core/Src/main.c **** 	if (rotations == 1) return 0;
 1148              		.loc 1 290 29 view .LVU253
 1149 000a 7047     		bx	lr
 1150              	.LVL84:
 1151              	.L88:
 291:Core/Src/main.c **** 	if (rotations == 0) return 1;
 1152              		.loc 1 291 29 view .LVU254
 1153 000c 0120     		movs	r0, #1
 1154              	.LVL85:
 1155              		.loc 1 292 1 view .LVU255
 1156 000e 7047     		bx	lr
 1157              		.cfi_endproc
 1158              	.LFE1454:
 1160              		.section	.text.Error_Handler,"ax",%progbits
 1161              		.align	1
 1162              		.global	Error_Handler
 1163              		.syntax unified
 1164              		.thumb
 1165              		.thumb_func
 1167              	Error_Handler:
 1168              	.LFB1457:
 293:Core/Src/main.c **** 
 294:Core/Src/main.c **** 
 295:Core/Src/main.c **** 
 296:Core/Src/main.c **** /* USER CODE END 0 */
 297:Core/Src/main.c **** 
 298:Core/Src/main.c **** /**
 299:Core/Src/main.c ****   * @brief  The application entry point.
 300:Core/Src/main.c ****   * @retval int
 301:Core/Src/main.c ****   */
 302:Core/Src/main.c **** 
 303:Core/Src/main.c **** // main game loop
 304:Core/Src/main.c **** int main(void)
 305:Core/Src/main.c **** {
 306:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 307:Core/Src/main.c **** 	int rotationInput;
 308:Core/Src/main.c **** 	Tetromino t;
 309:Core/Src/main.c **** 	GameState currentState = START_SCREEN;
 310:Core/Src/main.c ****   /* USER CODE END 1 */
 311:Core/Src/main.c **** 
 312:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 313:Core/Src/main.c **** 
 314:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 315:Core/Src/main.c ****   HAL_Init();
 316:Core/Src/main.c **** 
 317:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 318:Core/Src/main.c **** 
 319:Core/Src/main.c ****   /* USER CODE END Init */
 320:Core/Src/main.c **** 
 321:Core/Src/main.c ****   /* Configure the system clock */
 322:Core/Src/main.c ****   SystemClock_Config();
ARM GAS  /tmp/cce2Xn9k.s 			page 28


 323:Core/Src/main.c **** 
 324:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 325:Core/Src/main.c **** 
 326:Core/Src/main.c ****   /* USER CODE END SysInit */
 327:Core/Src/main.c **** 
 328:Core/Src/main.c ****   /* Initialize all configured peripherals */
 329:Core/Src/main.c ****   MX_GPIO_Init();
 330:Core/Src/main.c ****   MX_ADC1_Init();
 331:Core/Src/main.c ****   MX_ADC2_Init();
 332:Core/Src/main.c ****   MX_FMC_Init();
 333:Core/Src/main.c ****   MX_I2C2_Init();
 334:Core/Src/main.c ****   MX_UART4_Init();
 335:Core/Src/main.c ****   MX_UART5_Init();
 336:Core/Src/main.c ****   MX_USART1_UART_Init();
 337:Core/Src/main.c ****   MX_USART2_UART_Init();
 338:Core/Src/main.c ****   MX_QUADSPI1_Init();
 339:Core/Src/main.c ****   MX_SPI1_Init();
 340:Core/Src/main.c ****   MX_TIM5_Init();
 341:Core/Src/main.c ****   MX_TIM8_Init();
 342:Core/Src/main.c ****   MX_TIM20_Init();
 343:Core/Src/main.c ****   MX_ADC3_Init();
 344:Core/Src/main.c ****   MX_DAC1_Init();
 345:Core/Src/main.c ****   MX_DAC2_Init();
 346:Core/Src/main.c ****   MX_FDCAN2_Init();
 347:Core/Src/main.c ****   MX_I2C1_Init();
 348:Core/Src/main.c ****   MX_TIM15_Init();
 349:Core/Src/main.c ****   MX_USART3_UART_Init();
 350:Core/Src/main.c ****   MX_ADC4_Init();
 351:Core/Src/main.c ****   MX_USB_Device_Init();
 352:Core/Src/main.c ****   MX_DMA_Init();
 353:Core/Src/main.c ****   MX_CRC_Init();
 354:Core/Src/main.c ****   MX_TIM6_Init();
 355:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 356:Core/Src/main.c **** 
 357:Core/Src/main.c ****   LED_init();
 358:Core/Src/main.c ****   KBD_init();
 359:Core/Src/main.c ****   SCI_init();
 360:Core/Src/main.c ****   joystick_init(&joystick);
 361:Core/Src/main.c **** 
 362:Core/Src/main.c **** //  for (uint8_t i=0;i<3;i++)
 363:Core/Src/main.c **** //  {
 364:Core/Src/main.c **** //	  HAL_Delay(250);
 365:Core/Src/main.c **** //	  LEDs_on(0xFF);
 366:Core/Src/main.c **** //	  HAL_Delay(250);
 367:Core/Src/main.c **** //	  LEDs_off(0xFF);
 368:Core/Src/main.c **** //  }
 369:Core/Src/main.c **** 
 370:Core/Src/main.c ****   LCD_Init();
 371:Core/Src/main.c ****   UG_Init(&gui, UserPixelSetFunction, ILI9341_GetParam(LCD_WIDTH), ILI9341_GetParam(LCD_HEIGHT));
 372:Core/Src/main.c ****   UG_FontSelect(&FONT_8X12);
 373:Core/Src/main.c ****   UG_SetForecolor(C_WHITE);
 374:Core/Src/main.c ****   UG_SetBackcolor(C_BLACK);
 375:Core/Src/main.c ****   UG_DriverRegister(DRIVER_FILL_FRAME, (void *)_HW_FillFrame_);
 376:Core/Src/main.c ****   UG_DriverEnable(DRIVER_FILL_FRAME);
 377:Core/Src/main.c **** 
 378:Core/Src/main.c ****   //
 379:Core/Src/main.c **** 
ARM GAS  /tmp/cce2Xn9k.s 			page 29


 380:Core/Src/main.c **** 
 381:Core/Src/main.c **** 
 382:Core/Src/main.c **** //  UG_SetForecolor(C_WHITE);
 383:Core/Src/main.c **** //  UG_FontSelect(&FONT_16X26);
 384:Core/Src/main.c **** //  sprintf(str,"%.0f fps",framerate);
 385:Core/Src/main.c **** //  UG_PutString(5,105,str);
 386:Core/Src/main.c **** 
 387:Core/Src/main.c ****   /* USER CODE END 2 */
 388:Core/Src/main.c **** 
 389:Core/Src/main.c ****   /* Infinite loop */
 390:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 391:Core/Src/main.c ****   while (1)
 392:Core/Src/main.c ****   {
 393:Core/Src/main.c **** 	  switch (currentState) {
 394:Core/Src/main.c **** 	  	  // ---------- START-STATE----------
 395:Core/Src/main.c ****         case START_SCREEN:
 396:Core/Src/main.c **** 
 397:Core/Src/main.c ****         	score = 0;
 398:Core/Src/main.c ****         	initFA();
 399:Core/Src/main.c ****         	initFR();
 400:Core/Src/main.c **** 			DrawStartScreen();
 401:Core/Src/main.c **** 			int buttonPressed = handleButtons();
 402:Core/Src/main.c **** 			if (buttonPressed < 4) {
 403:Core/Src/main.c **** 				rotations = toggle(rotations);
 404:Core/Src/main.c **** 				seed++;
 405:Core/Src/main.c **** 				UG_FillScreen(C_BLACK);
 406:Core/Src/main.c **** 			}
 407:Core/Src/main.c **** 
 408:Core/Src/main.c **** 			if (!KBD_get_button_state(BTN_OK)) {
 409:Core/Src/main.c **** 				UG_FillScreen(C_BLACK);
 410:Core/Src/main.c **** 				t = generateTetromino(pseudoRandom(7), pseudoRandom(4), 16);
 411:Core/Src/main.c **** 				//t = generateTetromino(0, 0, 16);
 412:Core/Src/main.c **** 				currentState = GAMING_SCREEN;
 413:Core/Src/main.c **** 				break;
 414:Core/Src/main.c **** 			}
 415:Core/Src/main.c **** 			break;
 416:Core/Src/main.c ****         // ---------- GAME-STATE----------
 417:Core/Src/main.c **** 	       case GAMING_SCREEN:
 418:Core/Src/main.c **** 
 419:Core/Src/main.c **** 			  LCD_TetrisFrame(t, fieldArray, fullRow);
 420:Core/Src/main.c **** 			  HAL_Delay(10);
 421:Core/Src/main.c **** 			  int input = handleButtons();
 422:Core/Src/main.c **** 			  int inputJ = handleJoystick();
 423:Core/Src/main.c **** 			  if (input == 6) {
 424:Core/Src/main.c **** 				  LCD_ClearScreen();
 425:Core/Src/main.c **** 				  rotations = 0;
 426:Core/Src/main.c **** 				  UG_FillScreen(C_BLACK);
 427:Core/Src/main.c **** 				  currentState = START_SCREEN;
 428:Core/Src/main.c **** 			  }
 429:Core/Src/main.c **** 			  HAL_Delay(200);
 430:Core/Src/main.c **** 
 431:Core/Src/main.c **** 			  int tetrominoLanded = 0;
 432:Core/Src/main.c **** 			  rotationInput = t.rotation;
 433:Core/Src/main.c **** 			  if (rotations == 1 && t.shape != 'O') {
 434:Core/Src/main.c **** 				  rotationInput += (input < 4) ? 1 : 0;
 435:Core/Src/main.c **** 			  }
 436:Core/Src/main.c **** 
ARM GAS  /tmp/cce2Xn9k.s 			page 30


 437:Core/Src/main.c **** 
 438:Core/Src/main.c **** 			  // checks collisions
 439:Core/Src/main.c **** 			  t.x += (inputJ != 0 && collisions(t, t.x+inputJ, t.y, rotationInput) == 1) ? 0 : inputJ;
 440:Core/Src/main.c **** 			  if (collisions(t, t.x, t.y+1, rotationInput) == 1) {
 441:Core/Src/main.c **** 				  t.rotation = rotationInput;
 442:Core/Src/main.c **** 				  writeToFA(t);
 443:Core/Src/main.c **** 				  tetrominoLanded = 1;
 444:Core/Src/main.c **** 			  }
 445:Core/Src/main.c **** 			  else {
 446:Core/Src/main.c **** 				  t.rotation = rotationInput;
 447:Core/Src/main.c **** 				  t.y++;
 448:Core/Src/main.c **** 			  }
 449:Core/Src/main.c **** 
 450:Core/Src/main.c **** 
 451:Core/Src/main.c **** 			  LCD_ClearScreen();
 452:Core/Src/main.c **** 
 453:Core/Src/main.c **** 			  if (tetrominoLanded == 1) {
 454:Core/Src/main.c **** 				LCD_PlayingField(fieldArray, fullRow);
 455:Core/Src/main.c **** 				if (t.y == 0) {
 456:Core/Src/main.c **** 					LCD_ClearScreen();
 457:Core/Src/main.c **** 					currentState = GAME_OVER_SCREEN;
 458:Core/Src/main.c **** 					break;
 459:Core/Src/main.c **** 				}
 460:Core/Src/main.c **** 
 461:Core/Src/main.c **** 				int s = pseudoRandom(7);
 462:Core/Src/main.c **** 				int r = pseudoRandom(4);
 463:Core/Src/main.c **** 				int p = pseudoRandom(28);
 464:Core/Src/main.c **** 				// generates new tetromino
 465:Core/Src/main.c **** 				t = generateTetromino(s, r, p+1);
 466:Core/Src/main.c **** 				//t = generateTetromino(0, 0, 16);
 467:Core/Src/main.c **** 			  }
 468:Core/Src/main.c **** 	            break;
 469:Core/Src/main.c ****           // ---------- GAME-OVER ----------
 470:Core/Src/main.c **** 	       case GAME_OVER_SCREEN:
 471:Core/Src/main.c **** 	    	   	DrawGameOverScreen();
 472:Core/Src/main.c **** 				if (!KBD_get_button_state(BTN_OK)) {
 473:Core/Src/main.c **** 					UG_FillScreen(C_BLACK);
 474:Core/Src/main.c **** 					currentState = START_SCREEN;
 475:Core/Src/main.c **** 					break;
 476:Core/Src/main.c **** 				}
 477:Core/Src/main.c **** 	            break;
 478:Core/Src/main.c **** 	      }
 479:Core/Src/main.c ****   }
 480:Core/Src/main.c **** 
 481:Core/Src/main.c ****   /* USER CODE END 3 */
 482:Core/Src/main.c **** }
 483:Core/Src/main.c **** 
 484:Core/Src/main.c **** /**
 485:Core/Src/main.c ****   * @brief System Clock Configuration
 486:Core/Src/main.c ****   * @retval None
 487:Core/Src/main.c ****   */
 488:Core/Src/main.c **** void SystemClock_Config(void)
 489:Core/Src/main.c **** {
 490:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 491:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 492:Core/Src/main.c **** 
 493:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
ARM GAS  /tmp/cce2Xn9k.s 			page 31


 494:Core/Src/main.c ****   */
 495:Core/Src/main.c ****   HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1_BOOST);
 496:Core/Src/main.c **** 
 497:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 498:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 499:Core/Src/main.c ****   */
 500:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI48|RCC_OSCILLATORTYPE_HSE;
 501:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_BYPASS;
 502:Core/Src/main.c ****   RCC_OscInitStruct.HSI48State = RCC_HSI48_ON;
 503:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 504:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 505:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = RCC_PLLM_DIV2;
 506:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 85;
 507:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 508:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV6;
 509:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 510:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 511:Core/Src/main.c ****   {
 512:Core/Src/main.c ****     Error_Handler();
 513:Core/Src/main.c ****   }
 514:Core/Src/main.c **** 
 515:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 516:Core/Src/main.c ****   */
 517:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 518:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 519:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 520:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 521:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 522:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 523:Core/Src/main.c **** 
 524:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
 525:Core/Src/main.c ****   {
 526:Core/Src/main.c ****     Error_Handler();
 527:Core/Src/main.c ****   }
 528:Core/Src/main.c **** }
 529:Core/Src/main.c **** 
 530:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 531:Core/Src/main.c **** 
 532:Core/Src/main.c **** /* USER CODE END 4 */
 533:Core/Src/main.c **** 
 534:Core/Src/main.c **** /**
 535:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 536:Core/Src/main.c ****   * @retval None
 537:Core/Src/main.c ****   */
 538:Core/Src/main.c **** void Error_Handler(void)
 539:Core/Src/main.c **** {
 1169              		.loc 1 539 1 is_stmt 1 view -0
 1170              		.cfi_startproc
 1171              		@ Volatile: function does not return.
 1172              		@ args = 0, pretend = 0, frame = 0
 1173              		@ frame_needed = 0, uses_anonymous_args = 0
 1174              		@ link register save eliminated.
 540:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 541:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 542:Core/Src/main.c ****   __disable_irq();
 1175              		.loc 1 542 3 view .LVU257
 1176              	.LBB16:
ARM GAS  /tmp/cce2Xn9k.s 			page 32


 1177              	.LBI16:
 1178              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
ARM GAS  /tmp/cce2Xn9k.s 			page 33


  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/cce2Xn9k.s 			page 34


 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
ARM GAS  /tmp/cce2Xn9k.s 			page 35


 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 1179              		.loc 2 207 27 view .LVU258
 1180              	.LBB17:
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 1181              		.loc 2 209 3 view .LVU259
 1182              		.syntax unified
 1183              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1184 0000 72B6     		cpsid i
 1185              	@ 0 "" 2
 1186              		.thumb
 1187              		.syntax unified
 1188              	.L90:
 1189              	.LBE17:
 1190              	.LBE16:
 543:Core/Src/main.c ****   while (1)
 1191              		.loc 1 543 3 discriminator 1 view .LVU260
 544:Core/Src/main.c ****   {
 545:Core/Src/main.c ****   }
 1192              		.loc 1 545 3 discriminator 1 view .LVU261
ARM GAS  /tmp/cce2Xn9k.s 			page 36


 543:Core/Src/main.c ****   while (1)
 1193              		.loc 1 543 9 discriminator 1 view .LVU262
 1194 0002 FEE7     		b	.L90
 1195              		.cfi_endproc
 1196              	.LFE1457:
 1198              		.section	.text.SystemClock_Config,"ax",%progbits
 1199              		.align	1
 1200              		.global	SystemClock_Config
 1201              		.syntax unified
 1202              		.thumb
 1203              		.thumb_func
 1205              	SystemClock_Config:
 1206              	.LFB1456:
 489:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1207              		.loc 1 489 1 view -0
 1208              		.cfi_startproc
 1209              		@ args = 0, pretend = 0, frame = 80
 1210              		@ frame_needed = 0, uses_anonymous_args = 0
 1211 0000 00B5     		push	{lr}
 1212              	.LCFI23:
 1213              		.cfi_def_cfa_offset 4
 1214              		.cfi_offset 14, -4
 1215 0002 95B0     		sub	sp, sp, #84
 1216              	.LCFI24:
 1217              		.cfi_def_cfa_offset 88
 490:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1218              		.loc 1 490 3 view .LVU264
 490:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1219              		.loc 1 490 22 is_stmt 0 view .LVU265
 1220 0004 3822     		movs	r2, #56
 1221 0006 0021     		movs	r1, #0
 1222 0008 06A8     		add	r0, sp, #24
 1223 000a FFF7FEFF 		bl	memset
 1224              	.LVL86:
 491:Core/Src/main.c **** 
 1225              		.loc 1 491 3 is_stmt 1 view .LVU266
 491:Core/Src/main.c **** 
 1226              		.loc 1 491 22 is_stmt 0 view .LVU267
 1227 000e 0020     		movs	r0, #0
 1228 0010 0190     		str	r0, [sp, #4]
 1229 0012 0290     		str	r0, [sp, #8]
 1230 0014 0390     		str	r0, [sp, #12]
 1231 0016 0490     		str	r0, [sp, #16]
 1232 0018 0590     		str	r0, [sp, #20]
 495:Core/Src/main.c **** 
 1233              		.loc 1 495 3 is_stmt 1 view .LVU268
 1234 001a FFF7FEFF 		bl	HAL_PWREx_ControlVoltageScaling
 1235              	.LVL87:
 500:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_BYPASS;
 1236              		.loc 1 500 3 view .LVU269
 500:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_BYPASS;
 1237              		.loc 1 500 36 is_stmt 0 view .LVU270
 1238 001e 2123     		movs	r3, #33
 1239 0020 0693     		str	r3, [sp, #24]
 501:Core/Src/main.c ****   RCC_OscInitStruct.HSI48State = RCC_HSI48_ON;
 1240              		.loc 1 501 3 is_stmt 1 view .LVU271
 501:Core/Src/main.c ****   RCC_OscInitStruct.HSI48State = RCC_HSI48_ON;
ARM GAS  /tmp/cce2Xn9k.s 			page 37


 1241              		.loc 1 501 30 is_stmt 0 view .LVU272
 1242 0022 4FF4A023 		mov	r3, #327680
 1243 0026 0793     		str	r3, [sp, #28]
 502:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1244              		.loc 1 502 3 is_stmt 1 view .LVU273
 502:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1245              		.loc 1 502 32 is_stmt 0 view .LVU274
 1246 0028 0123     		movs	r3, #1
 1247 002a 0C93     		str	r3, [sp, #48]
 503:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1248              		.loc 1 503 3 is_stmt 1 view .LVU275
 503:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1249              		.loc 1 503 34 is_stmt 0 view .LVU276
 1250 002c 0223     		movs	r3, #2
 1251 002e 0D93     		str	r3, [sp, #52]
 504:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = RCC_PLLM_DIV2;
 1252              		.loc 1 504 3 is_stmt 1 view .LVU277
 504:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = RCC_PLLM_DIV2;
 1253              		.loc 1 504 35 is_stmt 0 view .LVU278
 1254 0030 0322     		movs	r2, #3
 1255 0032 0E92     		str	r2, [sp, #56]
 505:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 85;
 1256              		.loc 1 505 3 is_stmt 1 view .LVU279
 505:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 85;
 1257              		.loc 1 505 30 is_stmt 0 view .LVU280
 1258 0034 0F93     		str	r3, [sp, #60]
 506:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1259              		.loc 1 506 3 is_stmt 1 view .LVU281
 506:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1260              		.loc 1 506 30 is_stmt 0 view .LVU282
 1261 0036 5522     		movs	r2, #85
 1262 0038 1092     		str	r2, [sp, #64]
 507:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV6;
 1263              		.loc 1 507 3 is_stmt 1 view .LVU283
 507:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV6;
 1264              		.loc 1 507 30 is_stmt 0 view .LVU284
 1265 003a 1193     		str	r3, [sp, #68]
 508:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 1266              		.loc 1 508 3 is_stmt 1 view .LVU285
 508:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 1267              		.loc 1 508 30 is_stmt 0 view .LVU286
 1268 003c 0622     		movs	r2, #6
 1269 003e 1292     		str	r2, [sp, #72]
 509:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1270              		.loc 1 509 3 is_stmt 1 view .LVU287
 509:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1271              		.loc 1 509 30 is_stmt 0 view .LVU288
 1272 0040 1393     		str	r3, [sp, #76]
 510:Core/Src/main.c ****   {
 1273              		.loc 1 510 3 is_stmt 1 view .LVU289
 510:Core/Src/main.c ****   {
 1274              		.loc 1 510 7 is_stmt 0 view .LVU290
 1275 0042 06A8     		add	r0, sp, #24
 1276 0044 FFF7FEFF 		bl	HAL_RCC_OscConfig
 1277              	.LVL88:
 510:Core/Src/main.c ****   {
 1278              		.loc 1 510 6 view .LVU291
ARM GAS  /tmp/cce2Xn9k.s 			page 38


 1279 0048 80B9     		cbnz	r0, .L95
 517:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1280              		.loc 1 517 3 is_stmt 1 view .LVU292
 517:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1281              		.loc 1 517 31 is_stmt 0 view .LVU293
 1282 004a 0F23     		movs	r3, #15
 1283 004c 0193     		str	r3, [sp, #4]
 519:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1284              		.loc 1 519 3 is_stmt 1 view .LVU294
 519:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1285              		.loc 1 519 34 is_stmt 0 view .LVU295
 1286 004e 0323     		movs	r3, #3
 1287 0050 0293     		str	r3, [sp, #8]
 520:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 1288              		.loc 1 520 3 is_stmt 1 view .LVU296
 520:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 1289              		.loc 1 520 35 is_stmt 0 view .LVU297
 1290 0052 0023     		movs	r3, #0
 1291 0054 0393     		str	r3, [sp, #12]
 521:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1292              		.loc 1 521 3 is_stmt 1 view .LVU298
 521:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1293              		.loc 1 521 36 is_stmt 0 view .LVU299
 1294 0056 0493     		str	r3, [sp, #16]
 522:Core/Src/main.c **** 
 1295              		.loc 1 522 3 is_stmt 1 view .LVU300
 522:Core/Src/main.c **** 
 1296              		.loc 1 522 36 is_stmt 0 view .LVU301
 1297 0058 0593     		str	r3, [sp, #20]
 524:Core/Src/main.c ****   {
 1298              		.loc 1 524 3 is_stmt 1 view .LVU302
 524:Core/Src/main.c ****   {
 1299              		.loc 1 524 7 is_stmt 0 view .LVU303
 1300 005a 0421     		movs	r1, #4
 1301 005c 0DEB0100 		add	r0, sp, r1
 1302 0060 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1303              	.LVL89:
 524:Core/Src/main.c ****   {
 1304              		.loc 1 524 6 view .LVU304
 1305 0064 20B9     		cbnz	r0, .L96
 528:Core/Src/main.c **** 
 1306              		.loc 1 528 1 view .LVU305
 1307 0066 15B0     		add	sp, sp, #84
 1308              	.LCFI25:
 1309              		.cfi_remember_state
 1310              		.cfi_def_cfa_offset 4
 1311              		@ sp needed
 1312 0068 5DF804FB 		ldr	pc, [sp], #4
 1313              	.L95:
 1314              	.LCFI26:
 1315              		.cfi_restore_state
 512:Core/Src/main.c ****   }
 1316              		.loc 1 512 5 is_stmt 1 view .LVU306
 1317 006c FFF7FEFF 		bl	Error_Handler
 1318              	.LVL90:
 1319              	.L96:
 526:Core/Src/main.c ****   }
ARM GAS  /tmp/cce2Xn9k.s 			page 39


 1320              		.loc 1 526 5 view .LVU307
 1321 0070 FFF7FEFF 		bl	Error_Handler
 1322              	.LVL91:
 1323              		.cfi_endproc
 1324              	.LFE1456:
 1326              		.section	.text.main,"ax",%progbits
 1327              		.align	1
 1328              		.global	main
 1329              		.syntax unified
 1330              		.thumb
 1331              		.thumb_func
 1333              	main:
 1334              	.LFB1455:
 305:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 1335              		.loc 1 305 1 view -0
 1336              		.cfi_startproc
 1337              		@ args = 0, pretend = 0, frame = 96
 1338              		@ frame_needed = 0, uses_anonymous_args = 0
 1339 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1340              	.LCFI27:
 1341              		.cfi_def_cfa_offset 24
 1342              		.cfi_offset 4, -24
 1343              		.cfi_offset 5, -20
 1344              		.cfi_offset 6, -16
 1345              		.cfi_offset 7, -12
 1346              		.cfi_offset 8, -8
 1347              		.cfi_offset 14, -4
 1348 0004 A4B0     		sub	sp, sp, #144
 1349              	.LCFI28:
 1350              		.cfi_def_cfa_offset 168
 307:Core/Src/main.c **** 	Tetromino t;
 1351              		.loc 1 307 2 view .LVU309
 308:Core/Src/main.c **** 	GameState currentState = START_SCREEN;
 1352              		.loc 1 308 2 view .LVU310
 309:Core/Src/main.c ****   /* USER CODE END 1 */
 1353              		.loc 1 309 2 view .LVU311
 1354              	.LVL92:
 315:Core/Src/main.c **** 
 1355              		.loc 1 315 3 view .LVU312
 1356 0006 FFF7FEFF 		bl	HAL_Init
 1357              	.LVL93:
 322:Core/Src/main.c **** 
 1358              		.loc 1 322 3 view .LVU313
 1359 000a FFF7FEFF 		bl	SystemClock_Config
 1360              	.LVL94:
 329:Core/Src/main.c ****   MX_ADC1_Init();
 1361              		.loc 1 329 3 view .LVU314
 1362 000e FFF7FEFF 		bl	MX_GPIO_Init
 1363              	.LVL95:
 330:Core/Src/main.c ****   MX_ADC2_Init();
 1364              		.loc 1 330 3 view .LVU315
 1365 0012 FFF7FEFF 		bl	MX_ADC1_Init
 1366              	.LVL96:
 331:Core/Src/main.c ****   MX_FMC_Init();
 1367              		.loc 1 331 3 view .LVU316
 1368 0016 FFF7FEFF 		bl	MX_ADC2_Init
 1369              	.LVL97:
ARM GAS  /tmp/cce2Xn9k.s 			page 40


 332:Core/Src/main.c ****   MX_I2C2_Init();
 1370              		.loc 1 332 3 view .LVU317
 1371 001a FFF7FEFF 		bl	MX_FMC_Init
 1372              	.LVL98:
 333:Core/Src/main.c ****   MX_UART4_Init();
 1373              		.loc 1 333 3 view .LVU318
 1374 001e FFF7FEFF 		bl	MX_I2C2_Init
 1375              	.LVL99:
 334:Core/Src/main.c ****   MX_UART5_Init();
 1376              		.loc 1 334 3 view .LVU319
 1377 0022 FFF7FEFF 		bl	MX_UART4_Init
 1378              	.LVL100:
 335:Core/Src/main.c ****   MX_USART1_UART_Init();
 1379              		.loc 1 335 3 view .LVU320
 1380 0026 FFF7FEFF 		bl	MX_UART5_Init
 1381              	.LVL101:
 336:Core/Src/main.c ****   MX_USART2_UART_Init();
 1382              		.loc 1 336 3 view .LVU321
 1383 002a FFF7FEFF 		bl	MX_USART1_UART_Init
 1384              	.LVL102:
 337:Core/Src/main.c ****   MX_QUADSPI1_Init();
 1385              		.loc 1 337 3 view .LVU322
 1386 002e FFF7FEFF 		bl	MX_USART2_UART_Init
 1387              	.LVL103:
 338:Core/Src/main.c ****   MX_SPI1_Init();
 1388              		.loc 1 338 3 view .LVU323
 1389 0032 FFF7FEFF 		bl	MX_QUADSPI1_Init
 1390              	.LVL104:
 339:Core/Src/main.c ****   MX_TIM5_Init();
 1391              		.loc 1 339 3 view .LVU324
 1392 0036 FFF7FEFF 		bl	MX_SPI1_Init
 1393              	.LVL105:
 340:Core/Src/main.c ****   MX_TIM8_Init();
 1394              		.loc 1 340 3 view .LVU325
 1395 003a FFF7FEFF 		bl	MX_TIM5_Init
 1396              	.LVL106:
 341:Core/Src/main.c ****   MX_TIM20_Init();
 1397              		.loc 1 341 3 view .LVU326
 1398 003e FFF7FEFF 		bl	MX_TIM8_Init
 1399              	.LVL107:
 342:Core/Src/main.c ****   MX_ADC3_Init();
 1400              		.loc 1 342 3 view .LVU327
 1401 0042 FFF7FEFF 		bl	MX_TIM20_Init
 1402              	.LVL108:
 343:Core/Src/main.c ****   MX_DAC1_Init();
 1403              		.loc 1 343 3 view .LVU328
 1404 0046 FFF7FEFF 		bl	MX_ADC3_Init
 1405              	.LVL109:
 344:Core/Src/main.c ****   MX_DAC2_Init();
 1406              		.loc 1 344 3 view .LVU329
 1407 004a FFF7FEFF 		bl	MX_DAC1_Init
 1408              	.LVL110:
 345:Core/Src/main.c ****   MX_FDCAN2_Init();
 1409              		.loc 1 345 3 view .LVU330
 1410 004e FFF7FEFF 		bl	MX_DAC2_Init
 1411              	.LVL111:
 346:Core/Src/main.c ****   MX_I2C1_Init();
ARM GAS  /tmp/cce2Xn9k.s 			page 41


 1412              		.loc 1 346 3 view .LVU331
 1413 0052 FFF7FEFF 		bl	MX_FDCAN2_Init
 1414              	.LVL112:
 347:Core/Src/main.c ****   MX_TIM15_Init();
 1415              		.loc 1 347 3 view .LVU332
 1416 0056 FFF7FEFF 		bl	MX_I2C1_Init
 1417              	.LVL113:
 348:Core/Src/main.c ****   MX_USART3_UART_Init();
 1418              		.loc 1 348 3 view .LVU333
 1419 005a FFF7FEFF 		bl	MX_TIM15_Init
 1420              	.LVL114:
 349:Core/Src/main.c ****   MX_ADC4_Init();
 1421              		.loc 1 349 3 view .LVU334
 1422 005e FFF7FEFF 		bl	MX_USART3_UART_Init
 1423              	.LVL115:
 350:Core/Src/main.c ****   MX_USB_Device_Init();
 1424              		.loc 1 350 3 view .LVU335
 1425 0062 FFF7FEFF 		bl	MX_ADC4_Init
 1426              	.LVL116:
 351:Core/Src/main.c ****   MX_DMA_Init();
 1427              		.loc 1 351 3 view .LVU336
 1428 0066 FFF7FEFF 		bl	MX_USB_Device_Init
 1429              	.LVL117:
 352:Core/Src/main.c ****   MX_CRC_Init();
 1430              		.loc 1 352 3 view .LVU337
 1431 006a FFF7FEFF 		bl	MX_DMA_Init
 1432              	.LVL118:
 353:Core/Src/main.c ****   MX_TIM6_Init();
 1433              		.loc 1 353 3 view .LVU338
 1434 006e FFF7FEFF 		bl	MX_CRC_Init
 1435              	.LVL119:
 354:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1436              		.loc 1 354 3 view .LVU339
 1437 0072 FFF7FEFF 		bl	MX_TIM6_Init
 1438              	.LVL120:
 357:Core/Src/main.c ****   KBD_init();
 1439              		.loc 1 357 3 view .LVU340
 1440 0076 FFF7FEFF 		bl	LED_init
 1441              	.LVL121:
 358:Core/Src/main.c ****   SCI_init();
 1442              		.loc 1 358 3 view .LVU341
 1443 007a FFF7FEFF 		bl	KBD_init
 1444              	.LVL122:
 359:Core/Src/main.c ****   joystick_init(&joystick);
 1445              		.loc 1 359 3 view .LVU342
 1446 007e FFF7FEFF 		bl	SCI_init
 1447              	.LVL123:
 360:Core/Src/main.c **** 
 1448              		.loc 1 360 3 view .LVU343
 1449 0082 8648     		ldr	r0, .L118
 1450 0084 FFF7FEFF 		bl	joystick_init
 1451              	.LVL124:
 370:Core/Src/main.c ****   UG_Init(&gui, UserPixelSetFunction, ILI9341_GetParam(LCD_WIDTH), ILI9341_GetParam(LCD_HEIGHT));
 1452              		.loc 1 370 3 view .LVU344
 1453 0088 FFF7FEFF 		bl	LCD_Init
 1454              	.LVL125:
 371:Core/Src/main.c ****   UG_FontSelect(&FONT_8X12);
ARM GAS  /tmp/cce2Xn9k.s 			page 42


 1455              		.loc 1 371 3 view .LVU345
 371:Core/Src/main.c ****   UG_FontSelect(&FONT_8X12);
 1456              		.loc 1 371 39 is_stmt 0 view .LVU346
 1457 008c 0020     		movs	r0, #0
 1458 008e FFF7FEFF 		bl	ILI9341_GetParam
 1459              	.LVL126:
 1460 0092 0446     		mov	r4, r0
 371:Core/Src/main.c ****   UG_FontSelect(&FONT_8X12);
 1461              		.loc 1 371 68 view .LVU347
 1462 0094 0120     		movs	r0, #1
 1463 0096 FFF7FEFF 		bl	ILI9341_GetParam
 1464              	.LVL127:
 1465 009a 0346     		mov	r3, r0
 371:Core/Src/main.c ****   UG_FontSelect(&FONT_8X12);
 1466              		.loc 1 371 3 view .LVU348
 1467 009c 2246     		mov	r2, r4
 1468 009e 8049     		ldr	r1, .L118+4
 1469 00a0 8048     		ldr	r0, .L118+8
 1470 00a2 FFF7FEFF 		bl	UG_Init
 1471              	.LVL128:
 372:Core/Src/main.c ****   UG_SetForecolor(C_WHITE);
 1472              		.loc 1 372 3 is_stmt 1 view .LVU349
 1473 00a6 8048     		ldr	r0, .L118+12
 1474 00a8 FFF7FEFF 		bl	UG_FontSelect
 1475              	.LVL129:
 373:Core/Src/main.c ****   UG_SetBackcolor(C_BLACK);
 1476              		.loc 1 373 3 view .LVU350
 1477 00ac 4FF6FF70 		movw	r0, #65535
 1478 00b0 FFF7FEFF 		bl	UG_SetForecolor
 1479              	.LVL130:
 374:Core/Src/main.c ****   UG_DriverRegister(DRIVER_FILL_FRAME, (void *)_HW_FillFrame_);
 1480              		.loc 1 374 3 view .LVU351
 1481 00b4 0020     		movs	r0, #0
 1482 00b6 FFF7FEFF 		bl	UG_SetBackcolor
 1483              	.LVL131:
 375:Core/Src/main.c ****   UG_DriverEnable(DRIVER_FILL_FRAME);
 1484              		.loc 1 375 3 view .LVU352
 1485 00ba 7C49     		ldr	r1, .L118+16
 1486 00bc 0120     		movs	r0, #1
 1487 00be FFF7FEFF 		bl	UG_DriverRegister
 1488              	.LVL132:
 376:Core/Src/main.c **** 
 1489              		.loc 1 376 3 view .LVU353
 1490 00c2 0120     		movs	r0, #1
 1491 00c4 FFF7FEFF 		bl	UG_DriverEnable
 1492              	.LVL133:
 309:Core/Src/main.c ****   /* USER CODE END 1 */
 1493              		.loc 1 309 12 is_stmt 0 view .LVU354
 1494 00c8 0024     		movs	r4, #0
 1495 00ca 54E0     		b	.L101
 1496              	.LVL134:
 1497              	.L117:
 1498              	.LBB18:
 403:Core/Src/main.c **** 				seed++;
 1499              		.loc 1 403 5 is_stmt 1 view .LVU355
 403:Core/Src/main.c **** 				seed++;
 1500              		.loc 1 403 17 is_stmt 0 view .LVU356
ARM GAS  /tmp/cce2Xn9k.s 			page 43


 1501 00cc 784D     		ldr	r5, .L118+20
 1502 00ce 2868     		ldr	r0, [r5]
 1503              	.LVL135:
 403:Core/Src/main.c **** 				seed++;
 1504              		.loc 1 403 17 view .LVU357
 1505 00d0 FFF7FEFF 		bl	toggle
 1506              	.LVL136:
 403:Core/Src/main.c **** 				seed++;
 1507              		.loc 1 403 15 view .LVU358
 1508 00d4 2860     		str	r0, [r5]
 404:Core/Src/main.c **** 				UG_FillScreen(C_BLACK);
 1509              		.loc 1 404 5 is_stmt 1 view .LVU359
 404:Core/Src/main.c **** 				UG_FillScreen(C_BLACK);
 1510              		.loc 1 404 9 is_stmt 0 view .LVU360
 1511 00d6 774A     		ldr	r2, .L118+24
 1512 00d8 1368     		ldr	r3, [r2]
 1513 00da 0133     		adds	r3, r3, #1
 1514 00dc 1360     		str	r3, [r2]
 405:Core/Src/main.c **** 			}
 1515              		.loc 1 405 5 is_stmt 1 view .LVU361
 1516 00de 0020     		movs	r0, #0
 1517 00e0 FFF7FEFF 		bl	UG_FillScreen
 1518              	.LVL137:
 1519 00e4 5BE0     		b	.L102
 1520              	.L99:
 419:Core/Src/main.c **** 			  HAL_Delay(10);
 1521              		.loc 1 419 6 view .LVU362
 1522 00e6 744B     		ldr	r3, .L118+28
 1523 00e8 0993     		str	r3, [sp, #36]
 1524 00ea 744B     		ldr	r3, .L118+32
 1525 00ec 0893     		str	r3, [sp, #32]
 1526 00ee EC46     		mov	ip, sp
 1527 00f0 0DF1700E 		add	lr, sp, #112
 1528 00f4 BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 1529 00f8 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 1530 00fc 9EE80F00 		ldm	lr, {r0, r1, r2, r3}
 1531 0100 8CE80F00 		stm	ip, {r0, r1, r2, r3}
 1532 0104 18AB     		add	r3, sp, #96
 1533 0106 0FCB     		ldm	r3, {r0, r1, r2, r3}
 1534 0108 FFF7FEFF 		bl	LCD_TetrisFrame
 1535              	.LVL138:
 420:Core/Src/main.c **** 			  int input = handleButtons();
 1536              		.loc 1 420 6 view .LVU363
 1537 010c 0A20     		movs	r0, #10
 1538 010e FFF7FEFF 		bl	HAL_Delay
 1539              	.LVL139:
 421:Core/Src/main.c **** 			  int inputJ = handleJoystick();
 1540              		.loc 1 421 6 view .LVU364
 421:Core/Src/main.c **** 			  int inputJ = handleJoystick();
 1541              		.loc 1 421 18 is_stmt 0 view .LVU365
 1542 0112 FFF7FEFF 		bl	handleButtons
 1543              	.LVL140:
 1544 0116 0646     		mov	r6, r0
 1545              	.LVL141:
 422:Core/Src/main.c **** 			  if (input == 6) {
 1546              		.loc 1 422 6 is_stmt 1 view .LVU366
 422:Core/Src/main.c **** 			  if (input == 6) {
ARM GAS  /tmp/cce2Xn9k.s 			page 44


 1547              		.loc 1 422 19 is_stmt 0 view .LVU367
 1548 0118 FFF7FEFF 		bl	handleJoystick
 1549              	.LVL142:
 422:Core/Src/main.c **** 			  if (input == 6) {
 1550              		.loc 1 422 19 view .LVU368
 1551 011c 0546     		mov	r5, r0
 1552              	.LVL143:
 423:Core/Src/main.c **** 				  LCD_ClearScreen();
 1553              		.loc 1 423 6 is_stmt 1 view .LVU369
 423:Core/Src/main.c **** 				  LCD_ClearScreen();
 1554              		.loc 1 423 9 is_stmt 0 view .LVU370
 1555 011e 062E     		cmp	r6, #6
 1556 0120 53D0     		beq	.L113
 1557              	.LVL144:
 1558              	.L104:
 429:Core/Src/main.c **** 
 1559              		.loc 1 429 6 is_stmt 1 view .LVU371
 1560 0122 C820     		movs	r0, #200
 1561 0124 FFF7FEFF 		bl	HAL_Delay
 1562              	.LVL145:
 431:Core/Src/main.c **** 			  rotationInput = t.rotation;
 1563              		.loc 1 431 6 view .LVU372
 432:Core/Src/main.c **** 			  if (rotations == 1 && t.shape != 'O') {
 1564              		.loc 1 432 6 view .LVU373
 432:Core/Src/main.c **** 			  if (rotations == 1 && t.shape != 'O') {
 1565              		.loc 1 432 20 is_stmt 0 view .LVU374
 1566 0128 189F     		ldr	r7, [sp, #96]
 1567              	.LVL146:
 433:Core/Src/main.c **** 				  rotationInput += (input < 4) ? 1 : 0;
 1568              		.loc 1 433 6 is_stmt 1 view .LVU375
 433:Core/Src/main.c **** 				  rotationInput += (input < 4) ? 1 : 0;
 1569              		.loc 1 433 20 is_stmt 0 view .LVU376
 1570 012a 614B     		ldr	r3, .L118+20
 1571 012c 1B68     		ldr	r3, [r3]
 433:Core/Src/main.c **** 				  rotationInput += (input < 4) ? 1 : 0;
 1572              		.loc 1 433 9 view .LVU377
 1573 012e 012B     		cmp	r3, #1
 1574 0130 54D0     		beq	.L114
 1575              	.L105:
 439:Core/Src/main.c **** 			  if (collisions(t, t.x, t.y+1, rotationInput) == 1) {
 1576              		.loc 1 439 6 is_stmt 1 view .LVU378
 439:Core/Src/main.c **** 			  if (collisions(t, t.x, t.y+1, rotationInput) == 1) {
 1577              		.loc 1 439 85 is_stmt 0 view .LVU379
 1578 0132 002D     		cmp	r5, #0
 1579 0134 5AD1     		bne	.L115
 1580              	.LVL147:
 1581              	.L106:
 439:Core/Src/main.c **** 			  if (collisions(t, t.x, t.y+1, rotationInput) == 1) {
 1582              		.loc 1 439 10 discriminator 6 view .LVU380
 1583 0136 2298     		ldr	r0, [sp, #136]
 1584 0138 0544     		add	r5, r5, r0
 1585 013a 2295     		str	r5, [sp, #136]
 440:Core/Src/main.c **** 				  t.rotation = rotationInput;
 1586              		.loc 1 440 6 is_stmt 1 discriminator 6 view .LVU381
 440:Core/Src/main.c **** 				  t.rotation = rotationInput;
 1587              		.loc 1 440 30 is_stmt 0 discriminator 6 view .LVU382
 1588 013c 239E     		ldr	r6, [sp, #140]
ARM GAS  /tmp/cce2Xn9k.s 			page 45


 440:Core/Src/main.c **** 				  t.rotation = rotationInput;
 1589              		.loc 1 440 10 discriminator 6 view .LVU383
 1590 013e 06F10108 		add	r8, r6, #1
 1591 0142 0A97     		str	r7, [sp, #40]
 1592 0144 CDF82480 		str	r8, [sp, #36]
 1593 0148 0895     		str	r5, [sp, #32]
 1594 014a EC46     		mov	ip, sp
 1595 014c 0DF1700E 		add	lr, sp, #112
 1596 0150 BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 1597 0154 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 1598 0158 9EE80F00 		ldm	lr, {r0, r1, r2, r3}
 1599 015c 8CE80F00 		stm	ip, {r0, r1, r2, r3}
 1600 0160 18AB     		add	r3, sp, #96
 1601 0162 0FCB     		ldm	r3, {r0, r1, r2, r3}
 1602 0164 FFF7FEFF 		bl	collisions
 1603              	.LVL148:
 440:Core/Src/main.c **** 				  t.rotation = rotationInput;
 1604              		.loc 1 440 9 discriminator 6 view .LVU384
 1605 0168 0128     		cmp	r0, #1
 1606 016a 57D0     		beq	.L116
 446:Core/Src/main.c **** 				  t.y++;
 1607              		.loc 1 446 7 is_stmt 1 view .LVU385
 446:Core/Src/main.c **** 				  t.y++;
 1608              		.loc 1 446 18 is_stmt 0 view .LVU386
 1609 016c 1897     		str	r7, [sp, #96]
 447:Core/Src/main.c **** 			  }
 1610              		.loc 1 447 7 is_stmt 1 view .LVU387
 447:Core/Src/main.c **** 			  }
 1611              		.loc 1 447 10 is_stmt 0 view .LVU388
 1612 016e CDF88C80 		str	r8, [sp, #140]
 451:Core/Src/main.c **** 
 1613              		.loc 1 451 6 is_stmt 1 view .LVU389
 1614 0172 FFF7FEFF 		bl	LCD_ClearScreen
 1615              	.LVL149:
 453:Core/Src/main.c **** 				LCD_PlayingField(fieldArray, fullRow);
 1616              		.loc 1 453 6 view .LVU390
 1617              	.L101:
 453:Core/Src/main.c **** 				LCD_PlayingField(fieldArray, fullRow);
 1618              		.loc 1 453 6 is_stmt 0 view .LVU391
 1619              	.LBE18:
 391:Core/Src/main.c ****   {
 1620              		.loc 1 391 3 is_stmt 1 view .LVU392
 393:Core/Src/main.c **** 	  	  // ---------- START-STATE----------
 1621              		.loc 1 393 4 view .LVU393
 1622 0176 012C     		cmp	r4, #1
 1623 0178 B5D0     		beq	.L99
 1624 017a 022C     		cmp	r4, #2
 1625 017c 00F08180 		beq	.L100
 1626 0180 002C     		cmp	r4, #0
 1627 0182 F8D1     		bne	.L101
 1628              	.LVL150:
 1629              	.L110:
 1630              	.LBB21:
 397:Core/Src/main.c ****         	initFA();
 1631              		.loc 1 397 10 view .LVU394
 397:Core/Src/main.c ****         	initFA();
 1632              		.loc 1 397 16 is_stmt 0 view .LVU395
ARM GAS  /tmp/cce2Xn9k.s 			page 46


 1633 0184 4E4B     		ldr	r3, .L118+36
 1634 0186 0022     		movs	r2, #0
 1635 0188 1A60     		str	r2, [r3]
 398:Core/Src/main.c ****         	initFR();
 1636              		.loc 1 398 10 is_stmt 1 view .LVU396
 1637 018a FFF7FEFF 		bl	initFA
 1638              	.LVL151:
 399:Core/Src/main.c **** 			DrawStartScreen();
 1639              		.loc 1 399 10 view .LVU397
 1640 018e FFF7FEFF 		bl	initFR
 1641              	.LVL152:
 400:Core/Src/main.c **** 			int buttonPressed = handleButtons();
 1642              		.loc 1 400 4 view .LVU398
 1643 0192 FFF7FEFF 		bl	DrawStartScreen
 1644              	.LVL153:
 401:Core/Src/main.c **** 			if (buttonPressed < 4) {
 1645              		.loc 1 401 4 view .LVU399
 401:Core/Src/main.c **** 			if (buttonPressed < 4) {
 1646              		.loc 1 401 24 is_stmt 0 view .LVU400
 1647 0196 FFF7FEFF 		bl	handleButtons
 1648              	.LVL154:
 402:Core/Src/main.c **** 				rotations = toggle(rotations);
 1649              		.loc 1 402 4 is_stmt 1 view .LVU401
 402:Core/Src/main.c **** 				rotations = toggle(rotations);
 1650              		.loc 1 402 7 is_stmt 0 view .LVU402
 1651 019a 0328     		cmp	r0, #3
 1652 019c 96DD     		ble	.L117
 1653              	.LVL155:
 1654              	.L102:
 408:Core/Src/main.c **** 				UG_FillScreen(C_BLACK);
 1655              		.loc 1 408 4 is_stmt 1 view .LVU403
 408:Core/Src/main.c **** 				UG_FillScreen(C_BLACK);
 1656              		.loc 1 408 9 is_stmt 0 view .LVU404
 1657 019e 0020     		movs	r0, #0
 1658 01a0 FFF7FEFF 		bl	KBD_get_button_state
 1659              	.LVL156:
 408:Core/Src/main.c **** 				UG_FillScreen(C_BLACK);
 1660              		.loc 1 408 7 view .LVU405
 1661 01a4 0028     		cmp	r0, #0
 1662 01a6 E6D1     		bne	.L101
 409:Core/Src/main.c **** 				t = generateTetromino(pseudoRandom(7), pseudoRandom(4), 16);
 1663              		.loc 1 409 5 is_stmt 1 view .LVU406
 1664 01a8 FFF7FEFF 		bl	UG_FillScreen
 1665              	.LVL157:
 410:Core/Src/main.c **** 				//t = generateTetromino(0, 0, 16);
 1666              		.loc 1 410 5 view .LVU407
 410:Core/Src/main.c **** 				//t = generateTetromino(0, 0, 16);
 1667              		.loc 1 410 9 is_stmt 0 view .LVU408
 1668 01ac 0720     		movs	r0, #7
 1669 01ae FFF7FEFF 		bl	pseudoRandom
 1670              	.LVL158:
 1671 01b2 0446     		mov	r4, r0
 1672 01b4 0420     		movs	r0, #4
 1673 01b6 FFF7FEFF 		bl	pseudoRandom
 1674              	.LVL159:
 1675 01ba 0246     		mov	r2, r0
 1676 01bc 1023     		movs	r3, #16
ARM GAS  /tmp/cce2Xn9k.s 			page 47


 1677 01be 2146     		mov	r1, r4
 1678 01c0 18A8     		add	r0, sp, #96
 1679 01c2 FFF7FEFF 		bl	generateTetromino
 1680              	.LVL160:
 412:Core/Src/main.c **** 				break;
 1681              		.loc 1 412 5 is_stmt 1 view .LVU409
 413:Core/Src/main.c **** 			}
 1682              		.loc 1 413 5 view .LVU410
 413:Core/Src/main.c **** 			}
 1683              		.loc 1 413 5 is_stmt 0 view .LVU411
 1684              	.LBE21:
 391:Core/Src/main.c ****   {
 1685              		.loc 1 391 3 is_stmt 1 view .LVU412
 393:Core/Src/main.c **** 	  	  // ---------- START-STATE----------
 1686              		.loc 1 393 4 view .LVU413
 1687              	.LBB22:
 412:Core/Src/main.c **** 				break;
 1688              		.loc 1 412 18 is_stmt 0 view .LVU414
 1689 01c6 0124     		movs	r4, #1
 1690 01c8 8DE7     		b	.L99
 1691              	.LVL161:
 1692              	.L113:
 424:Core/Src/main.c **** 				  rotations = 0;
 1693              		.loc 1 424 7 is_stmt 1 view .LVU415
 1694 01ca FFF7FEFF 		bl	LCD_ClearScreen
 1695              	.LVL162:
 425:Core/Src/main.c **** 				  UG_FillScreen(C_BLACK);
 1696              		.loc 1 425 7 view .LVU416
 425:Core/Src/main.c **** 				  UG_FillScreen(C_BLACK);
 1697              		.loc 1 425 17 is_stmt 0 view .LVU417
 1698 01ce 0024     		movs	r4, #0
 1699 01d0 374B     		ldr	r3, .L118+20
 1700 01d2 1C60     		str	r4, [r3]
 426:Core/Src/main.c **** 				  currentState = START_SCREEN;
 1701              		.loc 1 426 7 is_stmt 1 view .LVU418
 1702 01d4 2046     		mov	r0, r4
 1703 01d6 FFF7FEFF 		bl	UG_FillScreen
 1704              	.LVL163:
 427:Core/Src/main.c **** 			  }
 1705              		.loc 1 427 7 view .LVU419
 427:Core/Src/main.c **** 			  }
 1706              		.loc 1 427 7 is_stmt 0 view .LVU420
 1707 01da A2E7     		b	.L104
 1708              	.LVL164:
 1709              	.L114:
 433:Core/Src/main.c **** 				  rotationInput += (input < 4) ? 1 : 0;
 1710              		.loc 1 433 29 discriminator 1 view .LVU421
 1711 01dc 9DF86430 		ldrb	r3, [sp, #100]	@ zero_extendqisi2
 433:Core/Src/main.c **** 				  rotationInput += (input < 4) ? 1 : 0;
 1712              		.loc 1 433 25 discriminator 1 view .LVU422
 1713 01e0 4F2B     		cmp	r3, #79
 1714 01e2 A6D0     		beq	.L105
 434:Core/Src/main.c **** 			  }
 1715              		.loc 1 434 7 is_stmt 1 view .LVU423
 434:Core/Src/main.c **** 			  }
 1716              		.loc 1 434 21 is_stmt 0 view .LVU424
 1717 01e4 032E     		cmp	r6, #3
ARM GAS  /tmp/cce2Xn9k.s 			page 48


 1718 01e6 D8BF     		it	le
 1719 01e8 0137     		addle	r7, r7, #1
 1720              	.LVL165:
 434:Core/Src/main.c **** 			  }
 1721              		.loc 1 434 21 view .LVU425
 1722 01ea A2E7     		b	.L105
 1723              	.L115:
 439:Core/Src/main.c **** 			  if (collisions(t, t.x, t.y+1, rotationInput) == 1) {
 1724              		.loc 1 439 29 discriminator 2 view .LVU426
 1725 01ec 0A97     		str	r7, [sp, #40]
 1726 01ee 239B     		ldr	r3, [sp, #140]
 1727 01f0 0993     		str	r3, [sp, #36]
 1728 01f2 229B     		ldr	r3, [sp, #136]
 1729 01f4 2B44     		add	r3, r3, r5
 1730 01f6 0893     		str	r3, [sp, #32]
 1731 01f8 6E46     		mov	r6, sp
 1732              	.LVL166:
 439:Core/Src/main.c **** 			  if (collisions(t, t.x, t.y+1, rotationInput) == 1) {
 1733              		.loc 1 439 29 discriminator 2 view .LVU427
 1734 01fa 0DF1700C 		add	ip, sp, #112
 1735 01fe BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 1736 0202 0FC6     		stmia	r6!, {r0, r1, r2, r3}
 1737 0204 9CE80F00 		ldm	ip, {r0, r1, r2, r3}
 1738 0208 86E80F00 		stm	r6, {r0, r1, r2, r3}
 1739 020c 18AB     		add	r3, sp, #96
 1740 020e 0FCB     		ldm	r3, {r0, r1, r2, r3}
 1741 0210 FFF7FEFF 		bl	collisions
 1742              	.LVL167:
 439:Core/Src/main.c **** 			  if (collisions(t, t.x, t.y+1, rotationInput) == 1) {
 1743              		.loc 1 439 26 discriminator 2 view .LVU428
 1744 0214 0128     		cmp	r0, #1
 1745 0216 8ED1     		bne	.L106
 439:Core/Src/main.c **** 			  if (collisions(t, t.x, t.y+1, rotationInput) == 1) {
 1746              		.loc 1 439 85 view .LVU429
 1747 0218 0025     		movs	r5, #0
 1748              	.LVL168:
 439:Core/Src/main.c **** 			  if (collisions(t, t.x, t.y+1, rotationInput) == 1) {
 1749              		.loc 1 439 85 view .LVU430
 1750 021a 8CE7     		b	.L106
 1751              	.L116:
 441:Core/Src/main.c **** 				  writeToFA(t);
 1752              		.loc 1 441 7 is_stmt 1 view .LVU431
 441:Core/Src/main.c **** 				  writeToFA(t);
 1753              		.loc 1 441 18 is_stmt 0 view .LVU432
 1754 021c 1897     		str	r7, [sp, #96]
 442:Core/Src/main.c **** 				  tetrominoLanded = 1;
 1755              		.loc 1 442 7 is_stmt 1 view .LVU433
 1756 021e 6D46     		mov	r5, sp
 1757 0220 1CAF     		add	r7, sp, #112
 1758              	.LVL169:
 442:Core/Src/main.c **** 				  tetrominoLanded = 1;
 1759              		.loc 1 442 7 is_stmt 0 view .LVU434
 1760 0222 0FCF     		ldmia	r7!, {r0, r1, r2, r3}
 1761 0224 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 1762 0226 97E80F00 		ldm	r7, {r0, r1, r2, r3}
 1763 022a 85E80F00 		stm	r5, {r0, r1, r2, r3}
 1764 022e 18AB     		add	r3, sp, #96
ARM GAS  /tmp/cce2Xn9k.s 			page 49


 1765              	.LVL170:
 442:Core/Src/main.c **** 				  tetrominoLanded = 1;
 1766              		.loc 1 442 7 view .LVU435
 1767 0230 0FCB     		ldm	r3, {r0, r1, r2, r3}
 1768              	.LVL171:
 442:Core/Src/main.c **** 				  tetrominoLanded = 1;
 1769              		.loc 1 442 7 view .LVU436
 1770 0232 FFF7FEFF 		bl	writeToFA
 1771              	.LVL172:
 443:Core/Src/main.c **** 			  }
 1772              		.loc 1 443 7 is_stmt 1 view .LVU437
 451:Core/Src/main.c **** 
 1773              		.loc 1 451 6 view .LVU438
 1774 0236 FFF7FEFF 		bl	LCD_ClearScreen
 1775              	.LVL173:
 453:Core/Src/main.c **** 				LCD_PlayingField(fieldArray, fullRow);
 1776              		.loc 1 453 6 view .LVU439
 1777              	.LBB19:
 454:Core/Src/main.c **** 				if (t.y == 0) {
 1778              		.loc 1 454 5 view .LVU440
 1779 023a 1F49     		ldr	r1, .L118+28
 1780 023c 1F48     		ldr	r0, .L118+32
 1781 023e FFF7FEFF 		bl	LCD_PlayingField
 1782              	.LVL174:
 455:Core/Src/main.c **** 					LCD_ClearScreen();
 1783              		.loc 1 455 5 view .LVU441
 455:Core/Src/main.c **** 					LCD_ClearScreen();
 1784              		.loc 1 455 8 is_stmt 0 view .LVU442
 1785 0242 DEB1     		cbz	r6, .L108
 461:Core/Src/main.c **** 				int r = pseudoRandom(4);
 1786              		.loc 1 461 5 is_stmt 1 view .LVU443
 461:Core/Src/main.c **** 				int r = pseudoRandom(4);
 1787              		.loc 1 461 13 is_stmt 0 view .LVU444
 1788 0244 0720     		movs	r0, #7
 1789 0246 FFF7FEFF 		bl	pseudoRandom
 1790              	.LVL175:
 1791 024a 0546     		mov	r5, r0
 1792              	.LVL176:
 462:Core/Src/main.c **** 				int p = pseudoRandom(28);
 1793              		.loc 1 462 5 is_stmt 1 view .LVU445
 462:Core/Src/main.c **** 				int p = pseudoRandom(28);
 1794              		.loc 1 462 13 is_stmt 0 view .LVU446
 1795 024c 0420     		movs	r0, #4
 1796              	.LVL177:
 462:Core/Src/main.c **** 				int p = pseudoRandom(28);
 1797              		.loc 1 462 13 view .LVU447
 1798 024e FFF7FEFF 		bl	pseudoRandom
 1799              	.LVL178:
 1800 0252 0646     		mov	r6, r0
 1801              	.LVL179:
 463:Core/Src/main.c **** 				// generates new tetromino
 1802              		.loc 1 463 5 is_stmt 1 view .LVU448
 463:Core/Src/main.c **** 				// generates new tetromino
 1803              		.loc 1 463 13 is_stmt 0 view .LVU449
 1804 0254 1C20     		movs	r0, #28
 1805              	.LVL180:
 463:Core/Src/main.c **** 				// generates new tetromino
ARM GAS  /tmp/cce2Xn9k.s 			page 50


 1806              		.loc 1 463 13 view .LVU450
 1807 0256 FFF7FEFF 		bl	pseudoRandom
 1808              	.LVL181:
 465:Core/Src/main.c **** 				//t = generateTetromino(0, 0, 16);
 1809              		.loc 1 465 5 is_stmt 1 view .LVU451
 465:Core/Src/main.c **** 				//t = generateTetromino(0, 0, 16);
 1810              		.loc 1 465 9 is_stmt 0 view .LVU452
 1811 025a 431C     		adds	r3, r0, #1
 1812 025c 3246     		mov	r2, r6
 1813 025e 2946     		mov	r1, r5
 1814 0260 0CA8     		add	r0, sp, #48
 1815              	.LVL182:
 465:Core/Src/main.c **** 				//t = generateTetromino(0, 0, 16);
 1816              		.loc 1 465 9 view .LVU453
 1817 0262 FFF7FEFF 		bl	generateTetromino
 1818              	.LVL183:
 465:Core/Src/main.c **** 				//t = generateTetromino(0, 0, 16);
 1819              		.loc 1 465 9 view .LVU454
 1820 0266 18AE     		add	r6, sp, #96
 1821              	.LVL184:
 465:Core/Src/main.c **** 				//t = generateTetromino(0, 0, 16);
 1822              		.loc 1 465 9 view .LVU455
 1823 0268 0CAD     		add	r5, sp, #48
 1824              	.LVL185:
 465:Core/Src/main.c **** 				//t = generateTetromino(0, 0, 16);
 1825              		.loc 1 465 9 view .LVU456
 1826 026a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1827 026c 0FC6     		stmia	r6!, {r0, r1, r2, r3}
 1828              	.LVL186:
 465:Core/Src/main.c **** 				//t = generateTetromino(0, 0, 16);
 1829              		.loc 1 465 9 view .LVU457
 1830 026e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1831 0270 0FC6     		stmia	r6!, {r0, r1, r2, r3}
 1832 0272 95E80F00 		ldm	r5, {r0, r1, r2, r3}
 1833 0276 86E80F00 		stm	r6, {r0, r1, r2, r3}
 1834 027a 7CE7     		b	.L101
 1835              	.LVL187:
 1836              	.L108:
 456:Core/Src/main.c **** 					currentState = GAME_OVER_SCREEN;
 1837              		.loc 1 456 6 is_stmt 1 view .LVU458
 1838 027c FFF7FEFF 		bl	LCD_ClearScreen
 1839              	.LVL188:
 457:Core/Src/main.c **** 					break;
 1840              		.loc 1 457 6 view .LVU459
 458:Core/Src/main.c **** 				}
 1841              		.loc 1 458 6 view .LVU460
 458:Core/Src/main.c **** 				}
 1842              		.loc 1 458 6 is_stmt 0 view .LVU461
 1843              	.LBE19:
 1844              	.LBE22:
 391:Core/Src/main.c ****   {
 1845              		.loc 1 391 3 is_stmt 1 view .LVU462
 393:Core/Src/main.c **** 	  	  // ---------- START-STATE----------
 1846              		.loc 1 393 4 view .LVU463
 1847              	.LBB23:
 1848              	.LBB20:
 457:Core/Src/main.c **** 					break;
ARM GAS  /tmp/cce2Xn9k.s 			page 51


 1849              		.loc 1 457 19 is_stmt 0 view .LVU464
 1850 0280 0224     		movs	r4, #2
 1851              	.LVL189:
 1852              	.L100:
 457:Core/Src/main.c **** 					break;
 1853              		.loc 1 457 19 view .LVU465
 1854              	.LBE20:
 471:Core/Src/main.c **** 				if (!KBD_get_button_state(BTN_OK)) {
 1855              		.loc 1 471 11 is_stmt 1 view .LVU466
 1856 0282 FFF7FEFF 		bl	DrawGameOverScreen
 1857              	.LVL190:
 472:Core/Src/main.c **** 					UG_FillScreen(C_BLACK);
 1858              		.loc 1 472 5 view .LVU467
 472:Core/Src/main.c **** 					UG_FillScreen(C_BLACK);
 1859              		.loc 1 472 10 is_stmt 0 view .LVU468
 1860 0286 0020     		movs	r0, #0
 1861 0288 FFF7FEFF 		bl	KBD_get_button_state
 1862              	.LVL191:
 472:Core/Src/main.c **** 					UG_FillScreen(C_BLACK);
 1863              		.loc 1 472 8 view .LVU469
 1864 028c 0546     		mov	r5, r0
 1865 028e 0028     		cmp	r0, #0
 1866 0290 7FF471AF 		bne	.L101
 473:Core/Src/main.c **** 					currentState = START_SCREEN;
 1867              		.loc 1 473 6 is_stmt 1 view .LVU470
 1868 0294 FFF7FEFF 		bl	UG_FillScreen
 1869              	.LVL192:
 474:Core/Src/main.c **** 					break;
 1870              		.loc 1 474 6 view .LVU471
 475:Core/Src/main.c **** 				}
 1871              		.loc 1 475 6 view .LVU472
 475:Core/Src/main.c **** 				}
 1872              		.loc 1 475 6 is_stmt 0 view .LVU473
 1873              	.LBE23:
 391:Core/Src/main.c ****   {
 1874              		.loc 1 391 3 is_stmt 1 view .LVU474
 393:Core/Src/main.c **** 	  	  // ---------- START-STATE----------
 1875              		.loc 1 393 4 view .LVU475
 1876              	.LBB24:
 474:Core/Src/main.c **** 					break;
 1877              		.loc 1 474 19 is_stmt 0 view .LVU476
 1878 0298 2C46     		mov	r4, r5
 1879 029a 73E7     		b	.L110
 1880              	.L119:
 1881              		.align	2
 1882              	.L118:
 1883 029c 00000000 		.word	.LANCHOR11
 1884 02a0 00000000 		.word	UserPixelSetFunction
 1885 02a4 00000000 		.word	.LANCHOR16
 1886 02a8 00000000 		.word	FONT_8X12
 1887 02ac 00000000 		.word	_HW_FillFrame_
 1888 02b0 00000000 		.word	.LANCHOR15
 1889 02b4 00000000 		.word	.LANCHOR3
 1890 02b8 00000000 		.word	.LANCHOR1
 1891 02bc 00000000 		.word	.LANCHOR0
 1892 02c0 00000000 		.word	.LANCHOR2
 1893              	.LBE24:
ARM GAS  /tmp/cce2Xn9k.s 			page 52


 1894              		.cfi_endproc
 1895              	.LFE1455:
 1897              		.global	esc
 1898              		.global	ok
 1899              		.global	left
 1900              		.global	down
 1901              		.global	right
 1902              		.global	up
 1903              		.global	joystick
 1904              		.global	joystick_out
 1905              		.global	joystick_raw
 1906              		.global	fieldArray
 1907              		.global	seed
 1908              		.global	fullRow
 1909              		.global	rotations
 1910              		.global	score
 1911              		.global	p_x
 1912              		.global	p_y
 1913              		.global	gui
 1914              		.section	.bss.fieldArray,"aw",%nobits
 1915              		.align	2
 1916              		.set	.LANCHOR0,. + 0
 1919              	fieldArray:
 1920 0000 00000000 		.space	1700
 1920      00000000 
 1920      00000000 
 1920      00000000 
 1920      00000000 
 1921              		.section	.bss.fullRow,"aw",%nobits
 1922              		.align	2
 1923              		.set	.LANCHOR1,. + 0
 1926              	fullRow:
 1927 0000 00000000 		.space	96
 1927      00000000 
 1927      00000000 
 1927      00000000 
 1927      00000000 
 1928              		.section	.bss.gui,"aw",%nobits
 1929              		.align	2
 1930              		.set	.LANCHOR16,. + 0
 1933              	gui:
 1934 0000 00000000 		.space	140
 1934      00000000 
 1934      00000000 
 1934      00000000 
 1934      00000000 
 1935              		.section	.bss.joystick,"aw",%nobits
 1936              		.align	2
 1937              		.set	.LANCHOR11,. + 0
 1940              	joystick:
 1941 0000 00000000 		.space	40
 1941      00000000 
 1941      00000000 
 1941      00000000 
 1941      00000000 
 1942              		.section	.bss.joystick_out,"aw",%nobits
 1943              		.align	2
ARM GAS  /tmp/cce2Xn9k.s 			page 53


 1944              		.set	.LANCHOR12,. + 0
 1947              	joystick_out:
 1948 0000 00000000 		.space	8
 1948      00000000 
 1949              		.section	.bss.joystick_raw,"aw",%nobits
 1950              		.align	2
 1951              		.set	.LANCHOR10,. + 0
 1954              	joystick_raw:
 1955 0000 00000000 		.space	8
 1955      00000000 
 1956              		.section	.bss.ok,"aw",%nobits
 1957              		.align	2
 1958              		.set	.LANCHOR8,. + 0
 1961              	ok:
 1962 0000 00000000 		.space	12
 1962      00000000 
 1962      00000000 
 1963              		.section	.bss.rotations,"aw",%nobits
 1964              		.align	2
 1965              		.set	.LANCHOR15,. + 0
 1968              	rotations:
 1969 0000 00000000 		.space	4
 1970              		.section	.bss.score,"aw",%nobits
 1971              		.align	2
 1972              		.set	.LANCHOR2,. + 0
 1975              	score:
 1976 0000 00000000 		.space	4
 1977              		.section	.data.down,"aw"
 1978              		.align	2
 1979              		.set	.LANCHOR7,. + 0
 1982              	down:
 1983 0000 03       		.byte	3
 1984 0001 000000   		.space	3
 1985 0004 00000000 		.word	0
 1986 0008 00000000 		.word	0
 1987              		.section	.data.esc,"aw"
 1988              		.align	2
 1989              		.set	.LANCHOR9,. + 0
 1992              	esc:
 1993 0000 01       		.byte	1
 1994 0001 000000   		.space	3
 1995 0004 00000000 		.word	0
 1996 0008 00000000 		.word	0
 1997              		.section	.data.left,"aw"
 1998              		.align	2
 1999              		.set	.LANCHOR5,. + 0
 2002              	left:
 2003 0000 05       		.byte	5
 2004 0001 000000   		.space	3
 2005 0004 00000000 		.word	0
 2006 0008 00000000 		.word	0
 2007              		.section	.data.p_x,"aw"
 2008              		.align	1
 2009              		.set	.LANCHOR14,. + 0
 2012              	p_x:
 2013 0000 3C00     		.short	60
 2014              		.section	.data.p_y,"aw"
ARM GAS  /tmp/cce2Xn9k.s 			page 54


 2015              		.align	1
 2016              		.set	.LANCHOR13,. + 0
 2019              	p_y:
 2020 0000 1400     		.short	20
 2021              		.section	.data.right,"aw"
 2022              		.align	2
 2023              		.set	.LANCHOR4,. + 0
 2026              	right:
 2027 0000 04       		.byte	4
 2028 0001 000000   		.space	3
 2029 0004 00000000 		.word	0
 2030 0008 00000000 		.word	0
 2031              		.section	.data.seed,"aw"
 2032              		.align	2
 2033              		.set	.LANCHOR3,. + 0
 2036              	seed:
 2037 0000 39300000 		.word	12345
 2038              		.section	.data.up,"aw"
 2039              		.align	2
 2040              		.set	.LANCHOR6,. + 0
 2043              	up:
 2044 0000 02       		.byte	2
 2045 0001 000000   		.space	3
 2046 0004 00000000 		.word	0
 2047 0008 00000000 		.word	0
 2048              		.text
 2049              	.Letext0:
 2050              		.file 3 "/usr/share/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/machine/_default_types.h"
 2051              		.file 4 "/usr/share/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/sys/_stdint.h"
 2052              		.file 5 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g474xx.h"
 2053              		.file 6 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g4xx.h"
 2054              		.file 7 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_def.h"
 2055              		.file 8 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_rcc.h"
 2056              		.file 9 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_dma.h"
 2057              		.file 10 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_adc.h"
 2058              		.file 11 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h"
 2059              		.file 12 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h"
 2060              		.file 13 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h"
 2061              		.file 14 "System/Include/kbd.h"
 2062              		.file 15 "Drivers/external/lcd_ili9341.h"
 2063              		.file 16 "Drivers/external/ugui_config.h"
 2064              		.file 17 "Drivers/external/ugui.h"
 2065              		.file 18 "Core/Inc/adc.h"
 2066              		.file 19 "Core/Inc/tetromino.h"
 2067              		.file 20 "Core/Inc/joystick.h"
 2068              		.file 21 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_pwr_ex.h"
 2069              		.file 22 "Drivers/external/lcd.h"
 2070              		.file 23 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal.h"
 2071              		.file 24 "Core/Inc/gpio.h"
 2072              		.file 25 "Core/Inc/fmc.h"
 2073              		.file 26 "Core/Inc/i2c.h"
 2074              		.file 27 "Core/Inc/usart.h"
 2075              		.file 28 "Core/Inc/quadspi.h"
 2076              		.file 29 "Core/Inc/spi.h"
 2077              		.file 30 "Core/Inc/tim.h"
 2078              		.file 31 "Core/Inc/dac.h"
 2079              		.file 32 "Core/Inc/fdcan.h"
ARM GAS  /tmp/cce2Xn9k.s 			page 55


 2080              		.file 33 "USB_Device/App/usb_device.h"
 2081              		.file 34 "Core/Inc/dma.h"
 2082              		.file 35 "Core/Inc/crc.h"
 2083              		.file 36 "System/Include/LED.h"
 2084              		.file 37 "System/Include/SCI.h"
 2085              		.file 38 "/usr/share/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/stdio.h"
 2086              		.file 39 "<built-in>"
ARM GAS  /tmp/cce2Xn9k.s 			page 56


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/cce2Xn9k.s:20     .text.UserPixelSetFunction:0000000000000000 $t
     /tmp/cce2Xn9k.s:26     .text.UserPixelSetFunction:0000000000000000 UserPixelSetFunction
     /tmp/cce2Xn9k.s:65     .text._HW_FillFrame_:0000000000000000 $t
     /tmp/cce2Xn9k.s:71     .text._HW_FillFrame_:0000000000000000 _HW_FillFrame_
     /tmp/cce2Xn9k.s:105    .text.initFA:0000000000000000 $t
     /tmp/cce2Xn9k.s:111    .text.initFA:0000000000000000 initFA
     /tmp/cce2Xn9k.s:194    .text.initFA:0000000000000048 $d
     /tmp/cce2Xn9k.s:199    .text.initFR:0000000000000000 $t
     /tmp/cce2Xn9k.s:205    .text.initFR:0000000000000000 initFR
     /tmp/cce2Xn9k.s:242    .text.initFR:0000000000000014 $d
     /tmp/cce2Xn9k.s:247    .text.writeToFA:0000000000000000 $t
     /tmp/cce2Xn9k.s:253    .text.writeToFA:0000000000000000 writeToFA
     /tmp/cce2Xn9k.s:387    .text.writeToFA:000000000000006c $d
     /tmp/cce2Xn9k.s:394    .text.collisions:0000000000000000 $t
     /tmp/cce2Xn9k.s:400    .text.collisions:0000000000000000 collisions
     /tmp/cce2Xn9k.s:534    .text.collisions:000000000000006c $d
     /tmp/cce2Xn9k.s:539    .text.pseudoRandom:0000000000000000 $t
     /tmp/cce2Xn9k.s:545    .text.pseudoRandom:0000000000000000 pseudoRandom
     /tmp/cce2Xn9k.s:595    .text.pseudoRandom:0000000000000034 $d
     /tmp/cce2Xn9k.s:602    .text.isButtonPressed:0000000000000000 $t
     /tmp/cce2Xn9k.s:608    .text.isButtonPressed:0000000000000000 isButtonPressed
     /tmp/cce2Xn9k.s:687    .text.handleButtons:0000000000000000 $t
     /tmp/cce2Xn9k.s:693    .text.handleButtons:0000000000000000 handleButtons
     /tmp/cce2Xn9k.s:777    .text.handleButtons:0000000000000050 $d
     /tmp/cce2Xn9k.s:787    .text.handleJoystick:0000000000000000 $t
     /tmp/cce2Xn9k.s:793    .text.handleJoystick:0000000000000000 handleJoystick
     /tmp/cce2Xn9k.s:877    .text.handleJoystick:0000000000000060 $d
     /tmp/cce2Xn9k.s:885    .rodata.DrawStartScreen.str1.4:0000000000000000 $d
     /tmp/cce2Xn9k.s:898    .text.DrawStartScreen:0000000000000000 $t
     /tmp/cce2Xn9k.s:904    .text.DrawStartScreen:0000000000000000 DrawStartScreen
     /tmp/cce2Xn9k.s:996    .text.DrawStartScreen:0000000000000078 $d
     /tmp/cce2Xn9k.s:1009   .rodata.DrawGameOverScreen.str1.4:0000000000000000 $d
     /tmp/cce2Xn9k.s:1022   .text.DrawGameOverScreen:0000000000000000 $t
     /tmp/cce2Xn9k.s:1028   .text.DrawGameOverScreen:0000000000000000 DrawGameOverScreen
     /tmp/cce2Xn9k.s:1107   .text.DrawGameOverScreen:0000000000000068 $d
     /tmp/cce2Xn9k.s:1119   .text.toggle:0000000000000000 $t
     /tmp/cce2Xn9k.s:1125   .text.toggle:0000000000000000 toggle
     /tmp/cce2Xn9k.s:1161   .text.Error_Handler:0000000000000000 $t
     /tmp/cce2Xn9k.s:1167   .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/cce2Xn9k.s:1199   .text.SystemClock_Config:0000000000000000 $t
     /tmp/cce2Xn9k.s:1205   .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/cce2Xn9k.s:1327   .text.main:0000000000000000 $t
     /tmp/cce2Xn9k.s:1333   .text.main:0000000000000000 main
     /tmp/cce2Xn9k.s:1883   .text.main:000000000000029c $d
     /tmp/cce2Xn9k.s:1992   .data.esc:0000000000000000 esc
     /tmp/cce2Xn9k.s:1961   .bss.ok:0000000000000000 ok
     /tmp/cce2Xn9k.s:2002   .data.left:0000000000000000 left
     /tmp/cce2Xn9k.s:1982   .data.down:0000000000000000 down
     /tmp/cce2Xn9k.s:2026   .data.right:0000000000000000 right
     /tmp/cce2Xn9k.s:2043   .data.up:0000000000000000 up
     /tmp/cce2Xn9k.s:1940   .bss.joystick:0000000000000000 joystick
     /tmp/cce2Xn9k.s:1947   .bss.joystick_out:0000000000000000 joystick_out
     /tmp/cce2Xn9k.s:1954   .bss.joystick_raw:0000000000000000 joystick_raw
     /tmp/cce2Xn9k.s:1919   .bss.fieldArray:0000000000000000 fieldArray
     /tmp/cce2Xn9k.s:2036   .data.seed:0000000000000000 seed
ARM GAS  /tmp/cce2Xn9k.s 			page 57


     /tmp/cce2Xn9k.s:1926   .bss.fullRow:0000000000000000 fullRow
     /tmp/cce2Xn9k.s:1968   .bss.rotations:0000000000000000 rotations
     /tmp/cce2Xn9k.s:1975   .bss.score:0000000000000000 score
     /tmp/cce2Xn9k.s:2012   .data.p_x:0000000000000000 p_x
     /tmp/cce2Xn9k.s:2019   .data.p_y:0000000000000000 p_y
     /tmp/cce2Xn9k.s:1933   .bss.gui:0000000000000000 gui
     /tmp/cce2Xn9k.s:1915   .bss.fieldArray:0000000000000000 $d
     /tmp/cce2Xn9k.s:1922   .bss.fullRow:0000000000000000 $d
     /tmp/cce2Xn9k.s:1929   .bss.gui:0000000000000000 $d
     /tmp/cce2Xn9k.s:1936   .bss.joystick:0000000000000000 $d
     /tmp/cce2Xn9k.s:1943   .bss.joystick_out:0000000000000000 $d
     /tmp/cce2Xn9k.s:1950   .bss.joystick_raw:0000000000000000 $d
     /tmp/cce2Xn9k.s:1957   .bss.ok:0000000000000000 $d
     /tmp/cce2Xn9k.s:1964   .bss.rotations:0000000000000000 $d
     /tmp/cce2Xn9k.s:1971   .bss.score:0000000000000000 $d
     /tmp/cce2Xn9k.s:1978   .data.down:0000000000000000 $d
     /tmp/cce2Xn9k.s:1988   .data.esc:0000000000000000 $d
     /tmp/cce2Xn9k.s:1998   .data.left:0000000000000000 $d
     /tmp/cce2Xn9k.s:2008   .data.p_x:0000000000000000 $d
     /tmp/cce2Xn9k.s:2015   .data.p_y:0000000000000000 $d
     /tmp/cce2Xn9k.s:2022   .data.right:0000000000000000 $d
     /tmp/cce2Xn9k.s:2032   .data.seed:0000000000000000 $d
     /tmp/cce2Xn9k.s:2039   .data.up:0000000000000000 $d

UNDEFINED SYMBOLS
ILI9341_SetDisplayWindow
ILI9341_SendData
LCD_FillRect
rotateTetromino
KBD_get_button_state
HAL_GetTick
HAL_ADC_Start
HAL_ADC_PollForConversion
HAL_ADC_GetValue
HAL_ADC_Stop
joystick_get
hadc4
UG_FontSelect
UG_SetForecolor
UG_PutString
HAL_Delay
FONT_32X53
FONT_12X16
sprintf
memset
HAL_PWREx_ControlVoltageScaling
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
MX_ADC1_Init
MX_ADC2_Init
MX_FMC_Init
MX_I2C2_Init
MX_UART4_Init
MX_UART5_Init
MX_USART1_UART_Init
ARM GAS  /tmp/cce2Xn9k.s 			page 58


MX_USART2_UART_Init
MX_QUADSPI1_Init
MX_SPI1_Init
MX_TIM5_Init
MX_TIM8_Init
MX_TIM20_Init
MX_ADC3_Init
MX_DAC1_Init
MX_DAC2_Init
MX_FDCAN2_Init
MX_I2C1_Init
MX_TIM15_Init
MX_USART3_UART_Init
MX_ADC4_Init
MX_USB_Device_Init
MX_DMA_Init
MX_CRC_Init
MX_TIM6_Init
LED_init
KBD_init
SCI_init
joystick_init
LCD_Init
ILI9341_GetParam
UG_Init
UG_SetBackcolor
UG_DriverRegister
UG_DriverEnable
UG_FillScreen
LCD_TetrisFrame
LCD_ClearScreen
generateTetromino
LCD_PlayingField
FONT_8X12
