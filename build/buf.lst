ARM GAS  /tmp/ccYhfDnV.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"buf.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.BUF_flush,"ax",%progbits
  20              		.align	1
  21              		.global	BUF_flush
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	BUF_flush:
  27              	.LVL0:
  28              	.LFB1:
  29              		.file 1 "System/buf.c"
   1:System/buf.c  **** /*
   2:System/buf.c  ****  * buf.c
   3:System/buf.c  ****  *
   4:System/buf.c  ****  *  Created on: Jan 20, 2022
   5:System/buf.c  ****  *      Author: Gasper
   6:System/buf.c  ****  */
   7:System/buf.c  **** 
   8:System/buf.c  **** /* **************** MODULE DESCRIPTION *************************
   9:System/buf.c  **** 
  10:System/buf.c  **** The buffer module is intended to help you use any array as a circular buffer.
  11:System/buf.c  **** You must therefore provide an array that will be treated as a buffer and a
  12:System/buf.c  **** buffer handle data structure where all the required parameters regarding
  13:System/buf.c  **** the buffer are kept.
  14:System/buf.c  **** 
  15:System/buf.c  **** ************************************************************* */
  16:System/buf.c  **** 
  17:System/buf.c  **** 
  18:System/buf.c  **** 
  19:System/buf.c  **** 
  20:System/buf.c  **** // ----------- Include other modules (for private) -------------
  21:System/buf.c  **** 
  22:System/buf.c  **** #include "buf.h"
  23:System/buf.c  **** 
  24:System/buf.c  **** 
  25:System/buf.c  **** // ---------------------- Private definitions ------------------
  26:System/buf.c  **** 
  27:System/buf.c  **** 
  28:System/buf.c  **** 
  29:System/buf.c  **** 
ARM GAS  /tmp/ccYhfDnV.s 			page 2


  30:System/buf.c  **** 
  31:System/buf.c  **** // -------------- Public function implementations --------------
  32:System/buf.c  **** 
  33:System/buf.c  **** void BUF_init(BUF_handle_t *buf_handle, uint8_t *buffer_ptr, uint32_t buf_length)
  34:System/buf.c  **** {
  35:System/buf.c  **** 	// Initialize the buffer handle according to given parameters.
  36:System/buf.c  **** 	buf_handle->buffer = buffer_ptr;
  37:System/buf.c  **** 	buf_handle->length = buf_length;
  38:System/buf.c  **** 
  39:System/buf.c  **** 
  40:System/buf.c  **** 	// And flush the buffer.
  41:System/buf.c  **** 	BUF_flush(buf_handle);
  42:System/buf.c  **** }
  43:System/buf.c  **** 
  44:System/buf.c  **** 
  45:System/buf.c  **** buf_rtrn_codes_t BUF_flush(BUF_handle_t *buf_handle)
  46:System/buf.c  **** {
  30              		.loc 1 46 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              		.loc 1 46 1 is_stmt 0 view .LVU1
  36 0000 0346     		mov	r3, r0
  47:System/buf.c  **** 	buf_handle->front = 0;
  37              		.loc 1 47 2 is_stmt 1 view .LVU2
  38              		.loc 1 47 20 is_stmt 0 view .LVU3
  39 0002 0020     		movs	r0, #0
  40              	.LVL1:
  41              		.loc 1 47 20 view .LVU4
  42 0004 D860     		str	r0, [r3, #12]
  48:System/buf.c  **** 	buf_handle->rear = 0;
  43              		.loc 1 48 2 is_stmt 1 view .LVU5
  44              		.loc 1 48 19 is_stmt 0 view .LVU6
  45 0006 9860     		str	r0, [r3, #8]
  49:System/buf.c  **** 	buf_handle->data_size = 0;
  46              		.loc 1 49 2 is_stmt 1 view .LVU7
  47              		.loc 1 49 24 is_stmt 0 view .LVU8
  48 0008 1861     		str	r0, [r3, #16]
  50:System/buf.c  **** 	buf_handle->free_size = buf_handle->length;
  49              		.loc 1 50 2 is_stmt 1 view .LVU9
  50              		.loc 1 50 36 is_stmt 0 view .LVU10
  51 000a 5A68     		ldr	r2, [r3, #4]
  52              		.loc 1 50 24 view .LVU11
  53 000c 5A61     		str	r2, [r3, #20]
  51:System/buf.c  **** 
  52:System/buf.c  **** 	return BUFFER_OK;
  54              		.loc 1 52 2 is_stmt 1 view .LVU12
  53:System/buf.c  **** }
  55              		.loc 1 53 1 is_stmt 0 view .LVU13
  56 000e 7047     		bx	lr
  57              		.cfi_endproc
  58              	.LFE1:
  60              		.section	.text.BUF_init,"ax",%progbits
  61              		.align	1
  62              		.global	BUF_init
  63              		.syntax unified
ARM GAS  /tmp/ccYhfDnV.s 			page 3


  64              		.thumb
  65              		.thumb_func
  67              	BUF_init:
  68              	.LVL2:
  69              	.LFB0:
  34:System/buf.c  **** 	// Initialize the buffer handle according to given parameters.
  70              		.loc 1 34 1 is_stmt 1 view -0
  71              		.cfi_startproc
  72              		@ args = 0, pretend = 0, frame = 0
  73              		@ frame_needed = 0, uses_anonymous_args = 0
  34:System/buf.c  **** 	// Initialize the buffer handle according to given parameters.
  74              		.loc 1 34 1 is_stmt 0 view .LVU15
  75 0000 08B5     		push	{r3, lr}
  76              	.LCFI0:
  77              		.cfi_def_cfa_offset 8
  78              		.cfi_offset 3, -8
  79              		.cfi_offset 14, -4
  36:System/buf.c  **** 	buf_handle->length = buf_length;
  80              		.loc 1 36 2 is_stmt 1 view .LVU16
  36:System/buf.c  **** 	buf_handle->length = buf_length;
  81              		.loc 1 36 21 is_stmt 0 view .LVU17
  82 0002 0160     		str	r1, [r0]
  37:System/buf.c  **** 
  83              		.loc 1 37 2 is_stmt 1 view .LVU18
  37:System/buf.c  **** 
  84              		.loc 1 37 21 is_stmt 0 view .LVU19
  85 0004 4260     		str	r2, [r0, #4]
  41:System/buf.c  **** }
  86              		.loc 1 41 2 is_stmt 1 view .LVU20
  87 0006 FFF7FEFF 		bl	BUF_flush
  88              	.LVL3:
  42:System/buf.c  **** 
  89              		.loc 1 42 1 is_stmt 0 view .LVU21
  90 000a 08BD     		pop	{r3, pc}
  91              		.cfi_endproc
  92              	.LFE0:
  94              		.section	.text.BUF_store_byte,"ax",%progbits
  95              		.align	1
  96              		.global	BUF_store_byte
  97              		.syntax unified
  98              		.thumb
  99              		.thumb_func
 101              	BUF_store_byte:
 102              	.LVL4:
 103              	.LFB2:
  54:System/buf.c  **** 
  55:System/buf.c  **** 
  56:System/buf.c  **** 
  57:System/buf.c  **** 
  58:System/buf.c  **** // Store one byte of data.
  59:System/buf.c  **** buf_rtrn_codes_t BUF_store_byte(BUF_handle_t *buf_handle, uint8_t data)
  60:System/buf.c  **** {
 104              		.loc 1 60 1 is_stmt 1 view -0
 105              		.cfi_startproc
 106              		@ args = 0, pretend = 0, frame = 0
 107              		@ frame_needed = 0, uses_anonymous_args = 0
 108              		@ link register save eliminated.
ARM GAS  /tmp/ccYhfDnV.s 			page 4


  61:System/buf.c  **** 	// check if buffer already full
  62:System/buf.c  **** 	if (buf_handle->data_size >= buf_handle->length)
 109              		.loc 1 62 2 view .LVU23
 110              		.loc 1 62 16 is_stmt 0 view .LVU24
 111 0000 0369     		ldr	r3, [r0, #16]
 112              		.loc 1 62 41 view .LVU25
 113 0002 4268     		ldr	r2, [r0, #4]
 114              		.loc 1 62 5 view .LVU26
 115 0004 9342     		cmp	r3, r2
 116 0006 15D2     		bcs	.L8
  63:System/buf.c  **** 	{
  64:System/buf.c  **** 		return BUFFER_FULL;	//-> if so, return error
  65:System/buf.c  **** 	}
  66:System/buf.c  **** 	else
  67:System/buf.c  **** 	{
  68:System/buf.c  **** 		// check special case: buffer empty
  69:System/buf.c  **** 		if (buf_handle->data_size == 0)
 117              		.loc 1 69 3 is_stmt 1 view .LVU27
 118              		.loc 1 69 6 is_stmt 0 view .LVU28
 119 0008 63B9     		cbnz	r3, .L6
  70:System/buf.c  **** 		{
  71:System/buf.c  **** 			buf_handle->front = 0;
 120              		.loc 1 71 4 is_stmt 1 view .LVU29
 121              		.loc 1 71 22 is_stmt 0 view .LVU30
 122 000a C360     		str	r3, [r0, #12]
  72:System/buf.c  **** 			buf_handle->rear = 0;
 123              		.loc 1 72 4 is_stmt 1 view .LVU31
 124              		.loc 1 72 21 is_stmt 0 view .LVU32
 125 000c 8360     		str	r3, [r0, #8]
 126              	.L7:
  73:System/buf.c  **** 		}
  74:System/buf.c  **** 		else
  75:System/buf.c  **** 		{
  76:System/buf.c  **** 			// increase rear pointer and apply modular arithmetics
  77:System/buf.c  **** 			buf_handle->rear++;
  78:System/buf.c  **** 
  79:System/buf.c  **** 			if (buf_handle->rear >= buf_handle->length)
  80:System/buf.c  **** 			{
  81:System/buf.c  **** 				buf_handle->rear = 0;
  82:System/buf.c  **** 			}
  83:System/buf.c  **** 		}
  84:System/buf.c  **** 
  85:System/buf.c  **** 
  86:System/buf.c  **** 		// by now rear pointer is ready for new data -> store data
  87:System/buf.c  **** 		buf_handle->buffer[buf_handle->rear] = data;
 127              		.loc 1 87 3 is_stmt 1 view .LVU33
 128              		.loc 1 87 13 is_stmt 0 view .LVU34
 129 000e 0268     		ldr	r2, [r0]
 130              		.loc 1 87 32 view .LVU35
 131 0010 8368     		ldr	r3, [r0, #8]
 132              		.loc 1 87 40 view .LVU36
 133 0012 D154     		strb	r1, [r2, r3]
  88:System/buf.c  **** 
  89:System/buf.c  **** 		// update data size and free size
  90:System/buf.c  **** 		buf_handle->data_size++;
 134              		.loc 1 90 3 is_stmt 1 view .LVU37
 135              		.loc 1 90 13 is_stmt 0 view .LVU38
ARM GAS  /tmp/ccYhfDnV.s 			page 5


 136 0014 0369     		ldr	r3, [r0, #16]
 137              		.loc 1 90 24 view .LVU39
 138 0016 0133     		adds	r3, r3, #1
 139 0018 0361     		str	r3, [r0, #16]
  91:System/buf.c  **** 		buf_handle->free_size--;
 140              		.loc 1 91 3 is_stmt 1 view .LVU40
 141              		.loc 1 91 13 is_stmt 0 view .LVU41
 142 001a 4369     		ldr	r3, [r0, #20]
 143              		.loc 1 91 24 view .LVU42
 144 001c 013B     		subs	r3, r3, #1
 145 001e 4361     		str	r3, [r0, #20]
  92:System/buf.c  **** 
  93:System/buf.c  **** 		return BUFFER_OK;
 146              		.loc 1 93 3 is_stmt 1 view .LVU43
 147              		.loc 1 93 10 is_stmt 0 view .LVU44
 148 0020 0020     		movs	r0, #0
 149              	.LVL5:
 150              		.loc 1 93 10 view .LVU45
 151 0022 7047     		bx	lr
 152              	.LVL6:
 153              	.L6:
  77:System/buf.c  **** 
 154              		.loc 1 77 4 is_stmt 1 view .LVU46
  77:System/buf.c  **** 
 155              		.loc 1 77 14 is_stmt 0 view .LVU47
 156 0024 8368     		ldr	r3, [r0, #8]
  77:System/buf.c  **** 
 157              		.loc 1 77 20 view .LVU48
 158 0026 0133     		adds	r3, r3, #1
 159 0028 8360     		str	r3, [r0, #8]
  79:System/buf.c  **** 			{
 160              		.loc 1 79 4 is_stmt 1 view .LVU49
  79:System/buf.c  **** 			{
 161              		.loc 1 79 7 is_stmt 0 view .LVU50
 162 002a 9A42     		cmp	r2, r3
 163 002c EFD8     		bhi	.L7
  81:System/buf.c  **** 			}
 164              		.loc 1 81 5 is_stmt 1 view .LVU51
  81:System/buf.c  **** 			}
 165              		.loc 1 81 22 is_stmt 0 view .LVU52
 166 002e 0023     		movs	r3, #0
 167 0030 8360     		str	r3, [r0, #8]
 168 0032 ECE7     		b	.L7
 169              	.L8:
  64:System/buf.c  **** 	}
 170              		.loc 1 64 10 view .LVU53
 171 0034 0120     		movs	r0, #1
 172              	.LVL7:
  94:System/buf.c  **** 	}
  95:System/buf.c  **** 
  96:System/buf.c  **** }
 173              		.loc 1 96 1 view .LVU54
 174 0036 7047     		bx	lr
 175              		.cfi_endproc
 176              	.LFE2:
 178              		.section	.text.BUF_store_bytes,"ax",%progbits
 179              		.align	1
ARM GAS  /tmp/ccYhfDnV.s 			page 6


 180              		.global	BUF_store_bytes
 181              		.syntax unified
 182              		.thumb
 183              		.thumb_func
 185              	BUF_store_bytes:
 186              	.LVL8:
 187              	.LFB3:
  97:System/buf.c  **** 
  98:System/buf.c  **** 
  99:System/buf.c  **** buf_rtrn_codes_t BUF_store_bytes(BUF_handle_t *buf_handle, uint8_t *data, uint32_t size)
 100:System/buf.c  **** {
 188              		.loc 1 100 1 is_stmt 1 view -0
 189              		.cfi_startproc
 190              		@ args = 0, pretend = 0, frame = 0
 191              		@ frame_needed = 0, uses_anonymous_args = 0
 192              		.loc 1 100 1 is_stmt 0 view .LVU56
 193 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 194              	.LCFI1:
 195              		.cfi_def_cfa_offset 24
 196              		.cfi_offset 3, -24
 197              		.cfi_offset 4, -20
 198              		.cfi_offset 5, -16
 199              		.cfi_offset 6, -12
 200              		.cfi_offset 7, -8
 201              		.cfi_offset 14, -4
 101:System/buf.c  **** 	buf_rtrn_codes_t rtrn_code = BUFFER_OK;
 202              		.loc 1 101 2 is_stmt 1 view .LVU57
 203              	.LVL9:
 102:System/buf.c  **** 
 103:System/buf.c  **** 	// First, check if there is even enough free space to store new data.
 104:System/buf.c  **** 	if (buf_handle->free_size < size)
 204              		.loc 1 104 2 view .LVU58
 205              		.loc 1 104 16 is_stmt 0 view .LVU59
 206 0002 4369     		ldr	r3, [r0, #20]
 207              		.loc 1 104 5 view .LVU60
 208 0004 9342     		cmp	r3, r2
 209 0006 10D3     		bcc	.L13
 210 0008 0646     		mov	r6, r0
 211 000a 0F46     		mov	r7, r1
 212 000c 1546     		mov	r5, r2
 213              	.LBB2:
 105:System/buf.c  **** 	{
 106:System/buf.c  **** 		return BUFFER_NOT_ENOUGH_SPACE;
 107:System/buf.c  **** 	}
 108:System/buf.c  **** 	else
 109:System/buf.c  **** 	{
 110:System/buf.c  **** 		// store the data cluster in the buffer
 111:System/buf.c  **** 		for(uint32_t i=0; i<size; i++)
 214              		.loc 1 111 16 view .LVU61
 215 000e 0024     		movs	r4, #0
 216              	.LVL10:
 217              	.L11:
 218              		.loc 1 111 21 is_stmt 1 discriminator 1 view .LVU62
 219              		.loc 1 111 3 is_stmt 0 discriminator 1 view .LVU63
 220 0010 AC42     		cmp	r4, r5
 221 0012 07D2     		bcs	.L15
 112:System/buf.c  **** 		{
ARM GAS  /tmp/ccYhfDnV.s 			page 7


 113:System/buf.c  **** 			// store i-th byte
 114:System/buf.c  **** 			rtrn_code = BUF_store_byte(buf_handle, data[i]);
 222              		.loc 1 114 4 is_stmt 1 view .LVU64
 223              		.loc 1 114 16 is_stmt 0 view .LVU65
 224 0014 395D     		ldrb	r1, [r7, r4]	@ zero_extendqisi2
 225 0016 3046     		mov	r0, r6
 226 0018 FFF7FEFF 		bl	BUF_store_byte
 227              	.LVL11:
 115:System/buf.c  **** 
 116:System/buf.c  **** 			// if the return code not OK, break the operation with the error code
 117:System/buf.c  **** 			if (rtrn_code != BUFFER_OK)
 228              		.loc 1 117 4 is_stmt 1 view .LVU66
 229              		.loc 1 117 7 is_stmt 0 view .LVU67
 230 001c 0346     		mov	r3, r0
 231 001e 10B9     		cbnz	r0, .L10
 111:System/buf.c  **** 		{
 232              		.loc 1 111 29 is_stmt 1 discriminator 2 view .LVU68
 111:System/buf.c  **** 		{
 233              		.loc 1 111 30 is_stmt 0 discriminator 2 view .LVU69
 234 0020 0134     		adds	r4, r4, #1
 235              	.LVL12:
 111:System/buf.c  **** 		{
 236              		.loc 1 111 30 discriminator 2 view .LVU70
 237 0022 F5E7     		b	.L11
 238              	.LVL13:
 239              	.L15:
 111:System/buf.c  **** 		{
 240              		.loc 1 111 30 discriminator 2 view .LVU71
 241              	.LBE2:
 118:System/buf.c  **** 				return rtrn_code;
 119:System/buf.c  **** 		}
 120:System/buf.c  **** 
 121:System/buf.c  **** 		// if all data store successfully, return OK
 122:System/buf.c  **** 		return BUFFER_OK;
 242              		.loc 1 122 10 view .LVU72
 243 0024 0023     		movs	r3, #0
 244              	.LVL14:
 245              	.L10:
 123:System/buf.c  **** 	}
 124:System/buf.c  **** }
 246              		.loc 1 124 1 view .LVU73
 247 0026 1846     		mov	r0, r3
 248 0028 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 249              	.LVL15:
 250              	.L13:
 106:System/buf.c  **** 	}
 251              		.loc 1 106 10 view .LVU74
 252 002a 0323     		movs	r3, #3
 253 002c FBE7     		b	.L10
 254              		.cfi_endproc
 255              	.LFE3:
 257              		.section	.text.BUF_get_byte,"ax",%progbits
 258              		.align	1
 259              		.global	BUF_get_byte
 260              		.syntax unified
 261              		.thumb
 262              		.thumb_func
ARM GAS  /tmp/ccYhfDnV.s 			page 8


 264              	BUF_get_byte:
 265              	.LVL16:
 266              	.LFB4:
 125:System/buf.c  **** 
 126:System/buf.c  **** 
 127:System/buf.c  **** 
 128:System/buf.c  **** 
 129:System/buf.c  **** 
 130:System/buf.c  **** 
 131:System/buf.c  **** 
 132:System/buf.c  **** // Read one byte of data and store it to the given location.
 133:System/buf.c  **** buf_rtrn_codes_t BUF_get_byte(BUF_handle_t *buf_handle, uint8_t *data)
 134:System/buf.c  **** {
 267              		.loc 1 134 1 is_stmt 1 view -0
 268              		.cfi_startproc
 269              		@ args = 0, pretend = 0, frame = 0
 270              		@ frame_needed = 0, uses_anonymous_args = 0
 271              		@ link register save eliminated.
 135:System/buf.c  **** 	// first check if buffer empty
 136:System/buf.c  **** 	if (buf_handle->data_size == 0)
 272              		.loc 1 136 2 view .LVU76
 273              		.loc 1 136 16 is_stmt 0 view .LVU77
 274 0000 0369     		ldr	r3, [r0, #16]
 275              		.loc 1 136 5 view .LVU78
 276 0002 9BB1     		cbz	r3, .L18
 137:System/buf.c  **** 	{
 138:System/buf.c  **** 		return BUFFER_EMPTY;	// return error code and exit this function
 139:System/buf.c  **** 	}
 140:System/buf.c  **** 
 141:System/buf.c  **** 	// else read and return data from the buffer "front"
 142:System/buf.c  **** 	*data = buf_handle->buffer[buf_handle->front];	//Get data from the queue "front"
 277              		.loc 1 142 2 is_stmt 1 view .LVU79
 278              		.loc 1 142 20 is_stmt 0 view .LVU80
 279 0004 0268     		ldr	r2, [r0]
 280              		.loc 1 142 39 view .LVU81
 281 0006 C368     		ldr	r3, [r0, #12]
 282              		.loc 1 142 28 view .LVU82
 283 0008 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 284              		.loc 1 142 8 view .LVU83
 285 000a 0B70     		strb	r3, [r1]
 143:System/buf.c  **** 
 144:System/buf.c  **** 	// update data size and free size
 145:System/buf.c  **** 	buf_handle->data_size--;
 286              		.loc 1 145 2 is_stmt 1 view .LVU84
 287              		.loc 1 145 12 is_stmt 0 view .LVU85
 288 000c 0369     		ldr	r3, [r0, #16]
 289              		.loc 1 145 23 view .LVU86
 290 000e 013B     		subs	r3, r3, #1
 291 0010 0361     		str	r3, [r0, #16]
 146:System/buf.c  **** 	buf_handle->free_size++;
 292              		.loc 1 146 2 is_stmt 1 view .LVU87
 293              		.loc 1 146 12 is_stmt 0 view .LVU88
 294 0012 4369     		ldr	r3, [r0, #20]
 295              		.loc 1 146 23 view .LVU89
 296 0014 0133     		adds	r3, r3, #1
 297 0016 4361     		str	r3, [r0, #20]
 147:System/buf.c  **** 
ARM GAS  /tmp/ccYhfDnV.s 			page 9


 148:System/buf.c  **** 
 149:System/buf.c  **** 	// update the "front" value NOT using the modulo arithmetics but
 150:System/buf.c  **** 	// using if-then instead because it is faster on uC
 151:System/buf.c  **** 	buf_handle->front++;
 298              		.loc 1 151 2 is_stmt 1 view .LVU90
 299              		.loc 1 151 12 is_stmt 0 view .LVU91
 300 0018 C368     		ldr	r3, [r0, #12]
 301              		.loc 1 151 19 view .LVU92
 302 001a 0133     		adds	r3, r3, #1
 303 001c C360     		str	r3, [r0, #12]
 152:System/buf.c  **** 
 153:System/buf.c  **** 	if (buf_handle->front >= buf_handle->length)
 304              		.loc 1 153 2 is_stmt 1 view .LVU93
 305              		.loc 1 153 37 is_stmt 0 view .LVU94
 306 001e 4268     		ldr	r2, [r0, #4]
 307              		.loc 1 153 5 view .LVU95
 308 0020 9342     		cmp	r3, r2
 309 0022 05D3     		bcc	.L19
 154:System/buf.c  **** 	{
 155:System/buf.c  **** 		buf_handle->front = 0;
 310              		.loc 1 155 3 is_stmt 1 view .LVU96
 311              		.loc 1 155 21 is_stmt 0 view .LVU97
 312 0024 0023     		movs	r3, #0
 313 0026 C360     		str	r3, [r0, #12]
 156:System/buf.c  **** 	}
 157:System/buf.c  **** 
 158:System/buf.c  **** 	return BUFFER_OK;	// return BUFFER_OK error code
 314              		.loc 1 158 9 view .LVU98
 315 0028 1846     		mov	r0, r3
 316              	.LVL17:
 317              		.loc 1 158 9 view .LVU99
 318 002a 7047     		bx	lr
 319              	.LVL18:
 320              	.L18:
 138:System/buf.c  **** 	}
 321              		.loc 1 138 10 view .LVU100
 322 002c 0220     		movs	r0, #2
 323              	.LVL19:
 138:System/buf.c  **** 	}
 324              		.loc 1 138 10 view .LVU101
 325 002e 7047     		bx	lr
 326              	.LVL20:
 327              	.L19:
 328              		.loc 1 158 9 view .LVU102
 329 0030 0020     		movs	r0, #0
 330              	.LVL21:
 159:System/buf.c  **** 
 160:System/buf.c  **** }
 331              		.loc 1 160 1 view .LVU103
 332 0032 7047     		bx	lr
 333              		.cfi_endproc
 334              	.LFE4:
 336              		.section	.text.BUF_get_bytes,"ax",%progbits
 337              		.align	1
 338              		.global	BUF_get_bytes
 339              		.syntax unified
 340              		.thumb
ARM GAS  /tmp/ccYhfDnV.s 			page 10


 341              		.thumb_func
 343              	BUF_get_bytes:
 344              	.LVL22:
 345              	.LFB5:
 161:System/buf.c  **** 
 162:System/buf.c  **** 
 163:System/buf.c  **** // Read the specified number of bytes (size) from the buffer and store it to the &data location.
 164:System/buf.c  **** buf_rtrn_codes_t BUF_get_bytes(BUF_handle_t *buf_handle, uint8_t *data,  uint32_t size)
 165:System/buf.c  **** {
 346              		.loc 1 165 1 is_stmt 1 view -0
 347              		.cfi_startproc
 348              		@ args = 0, pretend = 0, frame = 0
 349              		@ frame_needed = 0, uses_anonymous_args = 0
 350              		.loc 1 165 1 is_stmt 0 view .LVU105
 351 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 352              	.LCFI2:
 353              		.cfi_def_cfa_offset 24
 354              		.cfi_offset 3, -24
 355              		.cfi_offset 4, -20
 356              		.cfi_offset 5, -16
 357              		.cfi_offset 6, -12
 358              		.cfi_offset 7, -8
 359              		.cfi_offset 14, -4
 166:System/buf.c  **** 	uint32_t buf_data_size;
 360              		.loc 1 166 2 is_stmt 1 view .LVU106
 167:System/buf.c  **** 	buf_rtrn_codes_t	rtnr_code;
 361              		.loc 1 167 2 view .LVU107
 168:System/buf.c  **** 
 169:System/buf.c  **** 	// check if enough bytes available in the buffer
 170:System/buf.c  **** 	buf_data_size = buf_handle->data_size;	// remember the initial buffer data size
 362              		.loc 1 170 2 view .LVU108
 363              		.loc 1 170 16 is_stmt 0 view .LVU109
 364 0002 0769     		ldr	r7, [r0, #16]
 365              	.LVL23:
 171:System/buf.c  **** 	if (buf_data_size >= size)
 366              		.loc 1 171 2 is_stmt 1 view .LVU110
 367              		.loc 1 171 5 is_stmt 0 view .LVU111
 368 0004 9742     		cmp	r7, r2
 369 0006 0CD3     		bcc	.L26
 370 0008 0546     		mov	r5, r0
 371 000a 0E46     		mov	r6, r1
 372              	.LBB3:
 172:System/buf.c  **** 	{
 173:System/buf.c  **** 		// get all the data byte by byte and store in the &data location
 174:System/buf.c  **** 		for(int i=0; i<buf_data_size; i++ )
 373              		.loc 1 174 11 view .LVU112
 374 000c 0024     		movs	r4, #0
 375              	.LVL24:
 376              	.L21:
 377              		.loc 1 174 16 is_stmt 1 discriminator 1 view .LVU113
 378              		.loc 1 174 3 is_stmt 0 discriminator 1 view .LVU114
 379 000e BC42     		cmp	r4, r7
 380 0010 09D2     		bcs	.L27
 175:System/buf.c  **** 		{
 176:System/buf.c  **** 			// get one byte and remember the return code
 177:System/buf.c  **** 			rtnr_code = BUF_get_byte( buf_handle, &data[i] );
 381              		.loc 1 177 4 is_stmt 1 view .LVU115
ARM GAS  /tmp/ccYhfDnV.s 			page 11


 382              		.loc 1 177 16 is_stmt 0 view .LVU116
 383 0012 3119     		adds	r1, r6, r4
 384 0014 2846     		mov	r0, r5
 385 0016 FFF7FEFF 		bl	BUF_get_byte
 386              	.LVL25:
 178:System/buf.c  **** 
 179:System/buf.c  **** 			// if something went wrong reading this byte
 180:System/buf.c  **** 			if ( rtnr_code != BUFFER_OK )
 387              		.loc 1 180 4 is_stmt 1 view .LVU117
 388              		.loc 1 180 7 is_stmt 0 view .LVU118
 389 001a 0346     		mov	r3, r0
 390 001c 20B9     		cbnz	r0, .L22
 174:System/buf.c  **** 		{
 391              		.loc 1 174 33 is_stmt 1 discriminator 2 view .LVU119
 174:System/buf.c  **** 		{
 392              		.loc 1 174 34 is_stmt 0 discriminator 2 view .LVU120
 393 001e 0134     		adds	r4, r4, #1
 394              	.LVL26:
 174:System/buf.c  **** 		{
 395              		.loc 1 174 34 discriminator 2 view .LVU121
 396 0020 F5E7     		b	.L21
 397              	.LVL27:
 398              	.L26:
 174:System/buf.c  **** 		{
 399              		.loc 1 174 34 discriminator 2 view .LVU122
 400              	.LBE3:
 181:System/buf.c  **** 				 return rtnr_code;
 182:System/buf.c  **** 		}
 183:System/buf.c  **** 
 184:System/buf.c  **** 		// if we are here, everything went OK
 185:System/buf.c  **** 		return BUFFER_OK;
 186:System/buf.c  **** 
 187:System/buf.c  **** 	}
 188:System/buf.c  **** 	// if not enough bytes available, return error
 189:System/buf.c  **** 	else
 190:System/buf.c  **** 		return BUFFER_NOT_ENOUGH_DATA;
 401              		.loc 1 190 10 view .LVU123
 402 0022 0423     		movs	r3, #4
 403 0024 00E0     		b	.L22
 404              	.LVL28:
 405              	.L27:
 185:System/buf.c  **** 
 406              		.loc 1 185 10 view .LVU124
 407 0026 0023     		movs	r3, #0
 408              	.LVL29:
 409              	.L22:
 191:System/buf.c  **** 
 192:System/buf.c  **** 
 193:System/buf.c  **** }
 410              		.loc 1 193 1 view .LVU125
 411 0028 1846     		mov	r0, r3
 412 002a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 413              		.loc 1 193 1 view .LVU126
 414              		.cfi_endproc
 415              	.LFE5:
 417              		.section	.text.BUF_get_data_size,"ax",%progbits
 418              		.align	1
ARM GAS  /tmp/ccYhfDnV.s 			page 12


 419              		.global	BUF_get_data_size
 420              		.syntax unified
 421              		.thumb
 422              		.thumb_func
 424              	BUF_get_data_size:
 425              	.LVL30:
 426              	.LFB6:
 194:System/buf.c  **** 
 195:System/buf.c  **** 
 196:System/buf.c  **** 
 197:System/buf.c  **** // Get the number of bytes currently in the buffer queue.
 198:System/buf.c  **** uint32_t BUF_get_data_size(BUF_handle_t *buf_handle)
 199:System/buf.c  **** {
 427              		.loc 1 199 1 is_stmt 1 view -0
 428              		.cfi_startproc
 429              		@ args = 0, pretend = 0, frame = 0
 430              		@ frame_needed = 0, uses_anonymous_args = 0
 431              		@ link register save eliminated.
 200:System/buf.c  **** 	return buf_handle->data_size;
 432              		.loc 1 200 2 view .LVU128
 201:System/buf.c  **** }
 433              		.loc 1 201 1 is_stmt 0 view .LVU129
 434 0000 0069     		ldr	r0, [r0, #16]
 435              	.LVL31:
 436              		.loc 1 201 1 view .LVU130
 437 0002 7047     		bx	lr
 438              		.cfi_endproc
 439              	.LFE6:
 441              		.section	.text.BUF_get_free_size,"ax",%progbits
 442              		.align	1
 443              		.global	BUF_get_free_size
 444              		.syntax unified
 445              		.thumb
 446              		.thumb_func
 448              	BUF_get_free_size:
 449              	.LVL32:
 450              	.LFB7:
 202:System/buf.c  **** 
 203:System/buf.c  **** 
 204:System/buf.c  **** // Get the size of the free space in the buffer in bytes.
 205:System/buf.c  **** uint32_t BUF_get_free_size(BUF_handle_t *buf_handle)
 206:System/buf.c  **** {
 451              		.loc 1 206 1 is_stmt 1 view -0
 452              		.cfi_startproc
 453              		@ args = 0, pretend = 0, frame = 0
 454              		@ frame_needed = 0, uses_anonymous_args = 0
 455              		@ link register save eliminated.
 207:System/buf.c  **** 	return buf_handle->free_size;
 456              		.loc 1 207 2 view .LVU132
 208:System/buf.c  **** }
 457              		.loc 1 208 1 is_stmt 0 view .LVU133
 458 0000 4069     		ldr	r0, [r0, #20]
 459              	.LVL33:
 460              		.loc 1 208 1 view .LVU134
 461 0002 7047     		bx	lr
 462              		.cfi_endproc
 463              	.LFE7:
ARM GAS  /tmp/ccYhfDnV.s 			page 13


 465              		.section	.text.BUF_demo,"ax",%progbits
 466              		.align	1
 467              		.global	BUF_demo
 468              		.syntax unified
 469              		.thumb
 470              		.thumb_func
 472              	BUF_demo:
 473              	.LFB8:
 209:System/buf.c  **** 
 210:System/buf.c  **** 
 211:System/buf.c  **** 
 212:System/buf.c  **** 
 213:System/buf.c  **** 
 214:System/buf.c  **** 
 215:System/buf.c  **** 
 216:System/buf.c  **** // ------- Test functions ---------
 217:System/buf.c  **** 
 218:System/buf.c  **** 
 219:System/buf.c  **** // A simple buffer demonstration for debug stepping.
 220:System/buf.c  **** void BUF_demo(void)
 221:System/buf.c  **** {
 474              		.loc 1 221 1 is_stmt 1 view -0
 475              		.cfi_startproc
 476              		@ args = 0, pretend = 0, frame = 48
 477              		@ frame_needed = 0, uses_anonymous_args = 0
 478 0000 00B5     		push	{lr}
 479              	.LCFI3:
 480              		.cfi_def_cfa_offset 4
 481              		.cfi_offset 14, -4
 482 0002 8DB0     		sub	sp, sp, #52
 483              	.LCFI4:
 484              		.cfi_def_cfa_offset 56
 222:System/buf.c  **** 	#define TEST_BUF_LEN 	4
 223:System/buf.c  **** 
 224:System/buf.c  **** 	char test_string[16] = "test";
 485              		.loc 1 224 2 view .LVU136
 486              		.loc 1 224 7 is_stmt 0 view .LVU137
 487 0004 294B     		ldr	r3, .L32
 488 0006 93E80300 		ldm	r3, {r0, r1}
 489 000a 0890     		str	r0, [sp, #32]
 490 000c 8DF82410 		strb	r1, [sp, #36]
 491 0010 0023     		movs	r3, #0
 492 0012 CDF82530 		str	r3, [sp, #37]	@ unaligned
 493 0016 CDF82930 		str	r3, [sp, #41]	@ unaligned
 494 001a 0B93     		str	r3, [sp, #44]	@ unaligned
 225:System/buf.c  **** 
 226:System/buf.c  **** 	uint8_t data = 0;
 495              		.loc 1 226 2 is_stmt 1 view .LVU138
 496              		.loc 1 226 10 is_stmt 0 view .LVU139
 497 001c 8DF81F30 		strb	r3, [sp, #31]
 227:System/buf.c  **** 	uint8_t test_buffer[TEST_BUF_LEN];
 498              		.loc 1 227 2 is_stmt 1 view .LVU140
 228:System/buf.c  **** 	BUF_handle_t test_buf_handle;
 499              		.loc 1 228 2 view .LVU141
 229:System/buf.c  **** 
 230:System/buf.c  **** 	BUF_init( &test_buf_handle, test_buffer, TEST_BUF_LEN);
 500              		.loc 1 230 2 view .LVU142
ARM GAS  /tmp/ccYhfDnV.s 			page 14


 501 0020 0422     		movs	r2, #4
 502 0022 06A9     		add	r1, sp, #24
 503 0024 6846     		mov	r0, sp
 504 0026 FFF7FEFF 		bl	BUF_init
 505              	.LVL34:
 231:System/buf.c  **** 
 232:System/buf.c  **** 
 233:System/buf.c  **** 	BUF_store_byte( &test_buf_handle, 1);
 506              		.loc 1 233 2 view .LVU143
 507 002a 0121     		movs	r1, #1
 508 002c 6846     		mov	r0, sp
 509 002e FFF7FEFF 		bl	BUF_store_byte
 510              	.LVL35:
 234:System/buf.c  **** 	BUF_store_byte( &test_buf_handle, 2);
 511              		.loc 1 234 2 view .LVU144
 512 0032 0221     		movs	r1, #2
 513 0034 6846     		mov	r0, sp
 514 0036 FFF7FEFF 		bl	BUF_store_byte
 515              	.LVL36:
 235:System/buf.c  **** 	BUF_store_byte( &test_buf_handle, 3);
 516              		.loc 1 235 2 view .LVU145
 517 003a 0321     		movs	r1, #3
 518 003c 6846     		mov	r0, sp
 519 003e FFF7FEFF 		bl	BUF_store_byte
 520              	.LVL37:
 236:System/buf.c  **** 	BUF_store_byte( &test_buf_handle, 4);
 521              		.loc 1 236 2 view .LVU146
 522 0042 0421     		movs	r1, #4
 523 0044 6846     		mov	r0, sp
 524 0046 FFF7FEFF 		bl	BUF_store_byte
 525              	.LVL38:
 237:System/buf.c  **** 
 238:System/buf.c  **** 
 239:System/buf.c  **** 	BUF_get_byte(&test_buf_handle, &data);
 526              		.loc 1 239 2 view .LVU147
 527 004a 0DF11F01 		add	r1, sp, #31
 528 004e 6846     		mov	r0, sp
 529 0050 FFF7FEFF 		bl	BUF_get_byte
 530              	.LVL39:
 240:System/buf.c  **** 	BUF_get_byte(&test_buf_handle, &data);
 531              		.loc 1 240 2 view .LVU148
 532 0054 0DF11F01 		add	r1, sp, #31
 533 0058 6846     		mov	r0, sp
 534 005a FFF7FEFF 		bl	BUF_get_byte
 535              	.LVL40:
 241:System/buf.c  **** 	BUF_get_byte(&test_buf_handle, &data);
 536              		.loc 1 241 2 view .LVU149
 537 005e 0DF11F01 		add	r1, sp, #31
 538 0062 6846     		mov	r0, sp
 539 0064 FFF7FEFF 		bl	BUF_get_byte
 540              	.LVL41:
 242:System/buf.c  **** 
 243:System/buf.c  **** 	BUF_store_byte( &test_buf_handle, 5);
 541              		.loc 1 243 2 view .LVU150
 542 0068 0521     		movs	r1, #5
 543 006a 6846     		mov	r0, sp
 544 006c FFF7FEFF 		bl	BUF_store_byte
ARM GAS  /tmp/ccYhfDnV.s 			page 15


 545              	.LVL42:
 244:System/buf.c  **** 	BUF_store_byte( &test_buf_handle, 6);
 546              		.loc 1 244 2 view .LVU151
 547 0070 0621     		movs	r1, #6
 548 0072 6846     		mov	r0, sp
 549 0074 FFF7FEFF 		bl	BUF_store_byte
 550              	.LVL43:
 245:System/buf.c  **** 
 246:System/buf.c  **** 	BUF_get_byte(&test_buf_handle, &data);
 551              		.loc 1 246 2 view .LVU152
 552 0078 0DF11F01 		add	r1, sp, #31
 553 007c 6846     		mov	r0, sp
 554 007e FFF7FEFF 		bl	BUF_get_byte
 555              	.LVL44:
 247:System/buf.c  **** 	BUF_get_byte(&test_buf_handle, &data);
 556              		.loc 1 247 2 view .LVU153
 557 0082 0DF11F01 		add	r1, sp, #31
 558 0086 6846     		mov	r0, sp
 559 0088 FFF7FEFF 		bl	BUF_get_byte
 560              	.LVL45:
 248:System/buf.c  **** 	BUF_get_byte(&test_buf_handle, &data);
 561              		.loc 1 248 2 view .LVU154
 562 008c 0DF11F01 		add	r1, sp, #31
 563 0090 6846     		mov	r0, sp
 564 0092 FFF7FEFF 		bl	BUF_get_byte
 565              	.LVL46:
 249:System/buf.c  **** 
 250:System/buf.c  **** 
 251:System/buf.c  **** 
 252:System/buf.c  **** 	BUF_flush(&test_buf_handle);
 566              		.loc 1 252 2 view .LVU155
 567 0096 6846     		mov	r0, sp
 568 0098 FFF7FEFF 		bl	BUF_flush
 569              	.LVL47:
 253:System/buf.c  **** 
 254:System/buf.c  **** 	BUF_store_bytes(&test_buf_handle, (uint8_t*)test_string, 4);
 570              		.loc 1 254 2 view .LVU156
 571 009c 0422     		movs	r2, #4
 572 009e 08A9     		add	r1, sp, #32
 573 00a0 6846     		mov	r0, sp
 574 00a2 FFF7FEFF 		bl	BUF_store_bytes
 575              	.LVL48:
 255:System/buf.c  **** 
 256:System/buf.c  **** 
 257:System/buf.c  **** 
 258:System/buf.c  **** }
 576              		.loc 1 258 1 is_stmt 0 view .LVU157
 577 00a6 0DB0     		add	sp, sp, #52
 578              	.LCFI5:
 579              		.cfi_def_cfa_offset 4
 580              		@ sp needed
 581 00a8 5DF804FB 		ldr	pc, [sp], #4
 582              	.L33:
 583              		.align	2
 584              	.L32:
 585 00ac 00000000 		.word	.LANCHOR0
 586              		.cfi_endproc
ARM GAS  /tmp/ccYhfDnV.s 			page 16


 587              	.LFE8:
 589              		.section	.rodata
 590              		.align	2
 591              		.set	.LANCHOR0,. + 0
 592              	.LC0:
 593 0000 74657374 		.ascii	"test\000"
 593      00
 594 0005 00000000 		.space	11
 594      00000000 
 594      000000
 595              		.text
 596              	.Letext0:
 597              		.file 2 "/usr/share/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/machine/_default_types.h"
 598              		.file 3 "/usr/share/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/sys/_stdint.h"
 599              		.file 4 "System/Include/buf.h"
ARM GAS  /tmp/ccYhfDnV.s 			page 17


DEFINED SYMBOLS
                            *ABS*:0000000000000000 buf.c
     /tmp/ccYhfDnV.s:20     .text.BUF_flush:0000000000000000 $t
     /tmp/ccYhfDnV.s:26     .text.BUF_flush:0000000000000000 BUF_flush
     /tmp/ccYhfDnV.s:61     .text.BUF_init:0000000000000000 $t
     /tmp/ccYhfDnV.s:67     .text.BUF_init:0000000000000000 BUF_init
     /tmp/ccYhfDnV.s:95     .text.BUF_store_byte:0000000000000000 $t
     /tmp/ccYhfDnV.s:101    .text.BUF_store_byte:0000000000000000 BUF_store_byte
     /tmp/ccYhfDnV.s:179    .text.BUF_store_bytes:0000000000000000 $t
     /tmp/ccYhfDnV.s:185    .text.BUF_store_bytes:0000000000000000 BUF_store_bytes
     /tmp/ccYhfDnV.s:258    .text.BUF_get_byte:0000000000000000 $t
     /tmp/ccYhfDnV.s:264    .text.BUF_get_byte:0000000000000000 BUF_get_byte
     /tmp/ccYhfDnV.s:337    .text.BUF_get_bytes:0000000000000000 $t
     /tmp/ccYhfDnV.s:343    .text.BUF_get_bytes:0000000000000000 BUF_get_bytes
     /tmp/ccYhfDnV.s:418    .text.BUF_get_data_size:0000000000000000 $t
     /tmp/ccYhfDnV.s:424    .text.BUF_get_data_size:0000000000000000 BUF_get_data_size
     /tmp/ccYhfDnV.s:442    .text.BUF_get_free_size:0000000000000000 $t
     /tmp/ccYhfDnV.s:448    .text.BUF_get_free_size:0000000000000000 BUF_get_free_size
     /tmp/ccYhfDnV.s:466    .text.BUF_demo:0000000000000000 $t
     /tmp/ccYhfDnV.s:472    .text.BUF_demo:0000000000000000 BUF_demo
     /tmp/ccYhfDnV.s:585    .text.BUF_demo:00000000000000ac $d
     /tmp/ccYhfDnV.s:590    .rodata:0000000000000000 $d

NO UNDEFINED SYMBOLS
